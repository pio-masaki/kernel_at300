#ifndef __MT9P111_REG_H__
#define __MT9P111_REG_H__

/* max counter for retry I2C access */
#define MT9P111_MAX_WAITMS              1
#define MT9P111_MAX_RETRIES             5
#define MT9P111_POLL_WAITMS             1
#define MT9P111_POLL_RETRIES            50
#define MT9P111_COLOR_EFFECT_MASK       0xFF

enum {
	MT9P111_TABLE_END,
	MT9P111_WAIT_MS,
	MT9P111_REG16,
	MT9P111_REG8,
	MT9P111_POLL16,
	MT9P111_POLL8
};

enum {
	MT9P111_COLOR_EFFECT_NONE = 0,
	MT9P111_COLOR_EFFECT_MONO = 2,
	MT9P111_COLOR_EFFECT_SEPIA = 1,
	MT9P111_COLOR_EFFECT_NEGATIVE = 3,
	MT9P111_COLOR_EFFECT_SOLARIZE = 10
};

enum {
	MT9P111_WHITE_BALANCE_AUTO = 1,
	MT9P111_WHITE_BALANCE_INCANDESCENT = 7,
	MT9P111_WHITE_BALANCE_DAYLIGHT = 2,
	MT9P111_WHITE_BALANCE_FLUORESCENT = 6,
	MT9P111_WHITE_BALANCE_CLOUDY = 3
};

enum {
	MT9P111_EXPOSURE_0 = 0,
	MT9P111_EXPOSURE_PLUS_1 = 1,
	MT9P111_EXPOSURE_PLUS_2 = 2,
	MT9P111_EXPOSURE_MINUS_1 = -1,
	MT9P111_EXPOSURE_MINUS_2 = -2
};

enum {
	MT9P111_FOCUS_INFINITY = 0,
	MT9P111_FOCUS_MACRO = 1,
	MT9P111_FOCUS_AUTO = 2,
};

enum {
	MT9P111_FPS_DEFAULT = 0,
	MT9P111_FPS_MIN = 2000,
	MT9P111_FPS_MID = 1000,
	MT9P111_FPS_MAX = 33
};

enum {
	MT9P111_FLASH_ON = 0,
	MT9P111_FLASH_OFF = 1,
	MT9P111_FLASH_AUTO = 2
};

struct mt9p111_reg {
	u8 purpose;
	u16 addr;
	u16 val;
	u16 mask;
};

struct mt9p111_info {
	int mode;
	unsigned int af_mode;
	int touch_active;
	struct mutex lock;
	struct i2c_client *i2c_client;
	struct mt9p111_platform_data *pdata;
};

struct mt9p111_iso {
	int value;
	int again;
};

static struct mt9p111_reg seq_refresh[] = {
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD, Refresh Mode */
{MT9P111_POLL8, 0x8404, 0x00, 0xFF},
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg focus_trigger[] = {
{MT9P111_REG16, 0x098E, 0x1000},	/* LOGICAL_ADDRESS_ACCESS [AF_PROGRESS] */
{MT9P111_REG8, 0xB006, 0x01},		/* AF_PROGRESS */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg focus_auto[] = {
{MT9P111_REG16, 0x098E, 0x8419},	/* LOGICAL_ADD */
{MT9P111_REG8, 0x8419, 0x05},		/* SEQ_STATE_CFG_1_AF */
{MT9P111_REG8, 0xC400, 0x88},		/* AFM_ALGO */
/* Modify AF step settings */
{MT9P111_REG16, 0xB002, 0x0004},	/* AF_MODE */
{MT9P111_REG8, 0xB012, 0x09},		/* AF_FS_NUM_STEPS */
{MT9P111_REG8, 0xB013, 0x55},		/* AF_FS_NUM_STEPS2 */
{MT9P111_REG8, 0xB014, 0x04},		/* AF_FS_STEP_SIZE */
{MT9P111_REG8, 0xB018, 0x00},		/* AF_FS_POS_0 */
{MT9P111_REG8, 0xB019, 0x0C},		/* AF_FS_POS_1 */
{MT9P111_REG8, 0xB01A, 0x18},		/* AF_FS_POS_2 */
{MT9P111_REG8, 0xB01B, 0x24},		/* AF_FS_POS_3 */
{MT9P111_REG8, 0xB01C, 0x30},		/* AF_FS_POS_4 */
{MT9P111_REG8, 0xB01D, 0x3C},		/* AF_FS_POS_5 */
{MT9P111_REG8, 0xB01E, 0x48},		/* AF_FS_POS_6 */
{MT9P111_REG8, 0xB01F, 0x54},		/* AF_FS_POS_7 */
{MT9P111_REG8, 0xB020, 0x60},		/* AF_FS_POS_8 */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_REG16, 0x0620, 0x8000},	/* VCM_CONTROL */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg focus_infinity[] = {
{MT9P111_REG16, 0x098E, 0x8419},	/* LOGICAL_ADDRESS_ACCESS [SEQ_STATE_CFG_1_AF] */
{MT9P111_REG8, 0x8419, 0x00},		/* SEQ_STATE_CFG_1_AF */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_REG16, 0x0620, 0x0000},	/* VCM_CONTROL */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg focus_macro[] = {
{MT9P111_REG16, 0x098E, 0x8419},	/* LOGICAL_ADDRESS_ACCESS [SEQ_STATE_CFG_1_AF] */
{MT9P111_REG8, 0x8419, 0x05},		/* SEQ_STATE_CFG_1_AF */
{MT9P111_REG8, 0xC400, 0x88},		/* AFM_ALGO */
{MT9P111_REG16, 0xB002, 0x0004},	/* AF_MODE */
{MT9P111_REG8, 0xB012, 0x09},		/* AF_FS_NUM_STEPS */
{MT9P111_REG8, 0xB013, 0x55},		/* AF_FS_NUM_STEPS2 */
{MT9P111_REG8, 0xB014, 0x04},		/* AF_FS_STEP_SIZE */
{MT9P111_REG8, 0xB018, 0x00},		/* AF_FS_POS_0 */
{MT9P111_REG8, 0xB019, 0x30},		/* AF_FS_POS_1 */
{MT9P111_REG8, 0xB01A, 0x48},		/* AF_FS_POS_2 */
{MT9P111_REG8, 0xB01B, 0x54},		/* AF_FS_POS_3 */
{MT9P111_REG8, 0xB01C, 0x60},		/* AF_FS_POS_4 */
{MT9P111_REG8, 0xB01D, 0x64},		/* AF_FS_POS_5 */
{MT9P111_REG8, 0xB01E, 0x68},		/* AF_FS_POS_6 */
{MT9P111_REG8, 0xB01F, 0x6C},		/* AF_FS_POS_7 */
{MT9P111_REG8, 0xB020, 0x70},		/* AF_FS_POS_8 */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_REG16, 0x0620, 0x8000},	/* VCM_CONTROL */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg fps_min[] = {
/* 5~29.5 FPS */
{MT9P111_REG16, 0x098E, 0x281A},	/* LOGICAL_ADDRESS_ACCESS [AE_TRACK_MAX_INT_TIME_ROWS] */
{MT9P111_REG16, 0xA81A, 0x1900},	/* AE_TRACK_MAX_INT_TIME_ROWS */
{MT9P111_REG16, 0xA824, 0x0100},	/* AE_TRACK_MAX_DGAIN */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg fps_default[] = {
/* 10~29.5 FPS */
{MT9P111_REG16, 0x098E, 0x281A},	/* LOGICAL_ADDRESS_ACCESS [AE_TRACK_MAX_INT_TIME_ROWS] */
{MT9P111_REG16, 0xA81A, 0x0C80},	/* AE_TRACK_MAX_INT_TIME_ROWS */
{MT9P111_REG16, 0xA824, 0x0100},	/* AE_TRACK_MAX_DGAIN */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg fps_max[] = {
/* fix MAX FPS */
{MT9P111_REG16, 0x098E, 0x281A},	/* LOGICAL_ADDRESS_ACCESS [AE_TRACK_MAX_INT_TIME_ROWS] */
{MT9P111_REG16, 0xA81A, 0x0438},	/* AE_TRACK_MAX_INT_TIME_ROWS */
{MT9P111_REG16, 0xA824, 0x01E0},	/* AE_TRACK_MAX_DGAIN */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg color_effect_none[] = {
{MT9P111_REG16, 0x098E, 0xDC38},	/* LOGICAL_ADDRESS_ACCESS [SYS_SELECT_FX] */
{MT9P111_REG8, 0xDC38, 0x00},		/* SYS_SELECT_FX */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg color_effect_mono[] = {
{MT9P111_REG16, 0x098E, 0xDC38},	/* LOGICAL_ADDRESS_ACCESS [SYS_SELECT_FX] */
{MT9P111_REG8, 0xDC38, 0x01},		/* SYS_SELECT_FX */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg color_effect_sepia[] = {
{MT9P111_REG16, 0x098E, 0xDC38},	/* LOGICAL_ADDRESS_ACCESS [SYS_SELECT_FX] */
{MT9P111_REG8, 0xDC38, 0x02},		/* SYS_SELECT_FX */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg color_effect_negative[] = {
{MT9P111_REG16, 0x098E, 0xDC38},	/* LOGICAL_ADDRESS_ACCESS [SYS_SELECT_FX] */
{MT9P111_REG8, 0xDC38, 0x03},		/* SYS_SELECT_FX */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg color_effect_solarize[] = {
{MT9P111_REG16, 0x098E, 0xDC38},	/* LOGICAL_ADDRESS_ACCESS [SYS_SELECT_FX] */
{MT9P111_REG8, 0xDC38, 0x04},		/* SYS_SELECT_FX */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg white_balance_auto[] = {
{MT9P111_REG16, 0x098E, 0x1000},	/* LOGICAL_ADDRESS_ACCESS */
{MT9P111_REG8, 0x8410, 0x02},		/* SEQ_STATE_CFG_0_AWB */
{MT9P111_REG8, 0x8418, 0x02},		/* SEQ_STATE_CFG_1_AWB */
{MT9P111_REG8, 0x8420, 0x02},		/* SEQ_STATE_CFG_2_AWB */
{MT9P111_REG8, 0xAC44, 0x00},		/* AWB_LEFT_CCM_POS_RANGE_LIMIT */
{MT9P111_REG8, 0xAC45, 0x7F},		/* AWB_RIGHT_CCM_POS_RANGE_LIMIT */
{MT9P111_REG8, 0xAC3C, 0x39},		/* AWB_MIN_ACCEPTED_PRE_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC3D, 0x6E},		/* AWB_MAX_ACCEPTED_PRE_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC3E, 0x28},		/* AWB_MIN_ACCEPTED_PRE_AWB_B2G_RATIO */
{MT9P111_REG8, 0xAC3F, 0x6B},		/* AWB_MAX_ACCEPTED_PRE_AWB_B2G_RATIO */
{MT9P111_REG8, 0xAC40, 0x64},		/* AWB_MIN_ACCEPTED_POST_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC41, 0x66},		/* AWB_MAX_ACCEPTED_POST_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC42, 0x64},		/* AWB_MIN_ACCEPTED_POST_AWB_B2G_RATIO */
{MT9P111_REG8, 0xAC43, 0x66},		/* AWB_MAX_ACCEPTED_POST_AWB_B2G_RATIO */
/* A Light CCM & R/G B/g ratios */
{MT9P111_REG16, 0xAC46, 0x0218},	/* AWB_LEFT_CCM_0 */
{MT9P111_REG16, 0xAC48, 0xFEA3},	/* AWB_LEFT_CCM_1 */
{MT9P111_REG16, 0xAC4A, 0xFFA8},	/* AWB_LEFT_CCM_2 */
{MT9P111_REG16, 0xAC4C, 0xFFA2},	/* AWB_LEFT_CCM_3 */
{MT9P111_REG16, 0xAC4E, 0x0173},	/* AWB_LEFT_CCM_4 */
{MT9P111_REG16, 0xAC50, 0xFFA5},	/* AWB_LEFT_CCM_5 */
{MT9P111_REG16, 0xAC52, 0xFFE2},	/* AWB_LEFT_CCM_6 */
{MT9P111_REG16, 0xAC54, 0xFD55},	/* AWB_LEFT_CCM_7 */
{MT9P111_REG16, 0xAC56, 0x03F1},	/* AWB_LEFT_CCM_8 */
/* D65 Light CCM */
{MT9P111_REG16, 0xAC5C, 0x02D0},	/* AWB_RIGHT_CCM_0 */
{MT9P111_REG16, 0xAC5E, 0xFDFC},	/* AWB_RIGHT_CCM_1 */
{MT9P111_REG16, 0xAC60, 0xFFEE},	/* AWB_RIGHT_CCM_2 */
{MT9P111_REG16, 0xAC62, 0xFF7B},	/* AWB_RIGHT_CCM_3 */
{MT9P111_REG16, 0xAC64, 0x01A2},	/* AWB_RIGHT_CCM_4 */
{MT9P111_REG16, 0xAC66, 0xFFD0},	/* AWB_RIGHT_CCM_5 */
{MT9P111_REG16, 0xAC68, 0x0005},	/* AWB_RIGHT_CCM_6 */
{MT9P111_REG16, 0xAC6A, 0xFE9F},	/* AWB_RIGHT_CCM_7 */
{MT9P111_REG16, 0xAC6C, 0x0282},	/* AWB_RIGHT_CCM_8 */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD, Refresh Mode */
{MT9P111_POLL8, 0x8404, 0x00, 0xFF},
/* set APGA */
{MT9P111_REG8, 0xD005, 0x00},		/* PGA_CURRENT_ZONE -- Specify PGA Zone to 0~2 */
{MT9P111_REG16, 0xD002, 0x8007},	/* PGA_ALGO */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg white_balance_incandescent[] = {
/* MWB: AL */
{MT9P111_REG16, 0x098E, 0x0402},	/* LOGICAL_ADDRESS_ACCESS [SEQ_ALGO] */
{MT9P111_REG16, 0x8402, 0x0028},	/* SEQ_ALGO */
{MT9P111_REG8, 0xAC44, 0x00},		/* AWB_LEFT_CCM_POS_RANGE_LIMIT */
{MT9P111_REG8, 0xAC45, 0x7F},		/* AWB_RIGHT_CCM_POS_RANGE_LIMIT */
{MT9P111_REG8, 0xAC08, 0x00},		/* AWB_CUR_CCM_POS */
{MT9P111_REG16, 0x32D4, 0x008E},	/* DIGITAL_GAIN_1_RED */
{MT9P111_REG16, 0x32D6, 0x0080},	/* DIGITAL_GAIN_1_GREEN1 */
{MT9P111_REG16, 0x32D8, 0x0080},	/* DIGITAL_GAIN_1_GREEN2 */
{MT9P111_REG16, 0x32DA, 0x0129},	/* DIGITAL_GAIN_1_BLUE */
{MT9P111_REG8, 0xAC3C, 0x57},		/* AWB_MIN_ACCEPTED_PRE_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC3D, 0x5B},		/* AWB_MAX_ACCEPTED_PRE_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC3E, 0x29},		/* AWB_MIN_ACCEPTED_PRE_AWB_B2G_RATIO */
{MT9P111_REG8, 0xAC3F, 0x2D},		/* AWB_MAX_ACCEPTED_PRE_AWB_B2G_RATIO */
/* Left CCM & R/G B/g ratios */
{MT9P111_REG16, 0xAC46, 0x0342},	/* AWB_LEFT_CCM_0 */
{MT9P111_REG16, 0xAC48, 0xFE34},	/* AWB_LEFT_CCM_1 */
{MT9P111_REG16, 0xAC4A, 0xFF8D},	/* AWB_LEFT_CCM_2 */
{MT9P111_REG16, 0xAC4C, 0xFF76},	/* AWB_LEFT_CCM_3 */
{MT9P111_REG16, 0xAC4E, 0x0192},	/* AWB_LEFT_CCM_4 */
{MT9P111_REG16, 0xAC50, 0xFFB5},	/* AWB_LEFT_CCM_5 */
{MT9P111_REG16, 0xAC52, 0xFFDD},	/* AWB_LEFT_CCM_6 */
{MT9P111_REG16, 0xAC54, 0xFDC0},	/* AWB_LEFT_CCM_7 */
{MT9P111_REG16, 0xAC56, 0x0367},	/* AWB_LEFT_CCM_8 */
/* Right CCM */
{MT9P111_REG16, 0xAC5C, 0x0390},	/* AWB_RIGHT_CCM_0 */
{MT9P111_REG16, 0xAC5E, 0xFDF5},	/* AWB_RIGHT_CCM_1 */
{MT9P111_REG16, 0xAC60, 0xFF7E},	/* AWB_RIGHT_CCM_2 */
{MT9P111_REG16, 0xAC62, 0xFFA3},	/* AWB_RIGHT_CCM_3 */
{MT9P111_REG16, 0xAC64, 0x01BA},	/* AWB_RIGHT_CCM_4 */
{MT9P111_REG16, 0xAC66, 0xFFA5},	/* AWB_RIGHT_CCM_5 */
{MT9P111_REG16, 0xAC68, 0xFFEC},	/* AWB_RIGHT_CCM_6 */
{MT9P111_REG16, 0xAC6A, 0xFE23},	/* AWB_RIGHT_CCM_7 */
{MT9P111_REG16, 0xAC6C, 0x02F4},	/* AWB_RIGHT_CCM_8 */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_POLL8, 0x8404, 0x00, 0xFF},
{MT9P111_REG8, 0xD005, 0x00},		/* PGA_CURRENT_ZONE -- Specify PGA Zone to 0~2 */
{MT9P111_REG16, 0xD002, 0x8003},	/* PGA_ALGO */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg white_balance_daylight[] = {
/* MWB: D65 */
{MT9P111_REG16, 0x098E, 0x0402},	/* LOGICAL_ADDRESS_ACCESS [SEQ_ALGO] */
{MT9P111_REG16, 0x8402, 0x0028},	/* SEQ_ALGO */
{MT9P111_REG8, 0xAC44, 0x00},		/* AWB_LEFT_CCM_POS_RANGE_LIMIT */
{MT9P111_REG8, 0xAC45, 0x7F},		/* AWB_RIGHT_CCM_POS_RANGE_LIMIT */
{MT9P111_REG8, 0xAC08, 0x00},		/* AWB_CUR_CCM_POS */
{MT9P111_REG16, 0x32D4, 0x00CE},	/* DIGITAL_GAIN_1_RED */
{MT9P111_REG16, 0x32D6, 0x0080},	/* DIGITAL_GAIN_1_GREEN1 */
{MT9P111_REG16, 0x32D8, 0x0080},	/* DIGITAL_GAIN_1_GREEN2 */
{MT9P111_REG16, 0x32DA, 0x00B4},	/* DIGITAL_GAIN_1_BLUE */
{MT9P111_REG8, 0xAC3C, 0x3C},		/* AWB_MIN_ACCEPTED_PRE_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC3D, 0x40},		/* AWB_MAX_ACCEPTED_PRE_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC3E, 0x44},		/* AWB_MIN_ACCEPTED_PRE_AWB_B2G_RATIO */
{MT9P111_REG8, 0xAC3F, 0x48},		/* AWB_MAX_ACCEPTED_PRE_AWB_B2G_RATIO */
/* Left CCM & R/G B/g ratios */
{MT9P111_REG16, 0xAC46, 0x033D},	/* AWB_LEFT_CCM_0 */
{MT9P111_REG16, 0xAC48, 0xFDC1},	/* AWB_LEFT_CCM_1 */
{MT9P111_REG16, 0xAC4A, 0xFFED},	/* AWB_LEFT_CCM_2 */
{MT9P111_REG16, 0xAC4C, 0xFF7D},	/* AWB_LEFT_CCM_3 */
{MT9P111_REG16, 0xAC4E, 0x01A4},	/* AWB_LEFT_CCM_4 */
{MT9P111_REG16, 0xAC50, 0xFFD6},	/* AWB_LEFT_CCM_5 */
{MT9P111_REG16, 0xAC52, 0xFFF2},	/* AWB_LEFT_CCM_6 */
{MT9P111_REG16, 0xAC54, 0xFEB2},	/* AWB_LEFT_CCM_7 */
{MT9P111_REG16, 0xAC56, 0x025E},	/* AWB_LEFT_CCM_8 */
/* Right CCM */
{MT9P111_REG16, 0xAC5C, 0x033D},	/* AWB_RIGHT_CCM_0 */
{MT9P111_REG16, 0xAC5E, 0xFDC1},	/* AWB_RIGHT_CCM_1 */
{MT9P111_REG16, 0xAC60, 0xFFED},	/* AWB_RIGHT_CCM_2 */
{MT9P111_REG16, 0xAC62, 0xFF7D},	/* AWB_RIGHT_CCM_3 */
{MT9P111_REG16, 0xAC64, 0x01A4},	/* AWB_RIGHT_CCM_4 */
{MT9P111_REG16, 0xAC66, 0xFFD6},	/* AWB_RIGHT_CCM_5 */
{MT9P111_REG16, 0xAC68, 0xFFF2},	/* AWB_RIGHT_CCM_6 */
{MT9P111_REG16, 0xAC6A, 0xFEB2},	/* AWB_RIGHT_CCM_7 */
{MT9P111_REG16, 0xAC6C, 0x025E},	/* AWB_RIGHT_CCM_8 */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_POLL8, 0x8404, 0x00, 0xFF},
{MT9P111_REG8, 0xD005, 0x02},		/* PGA_CURRENT_ZONE -- Specify PGA Zone to 0~2 */
{MT9P111_REG16, 0xD002, 0x8003},	/* PGA_ALGO */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg white_balance_fluorescent[] = {
/* MWB: TL-84 */
{MT9P111_REG16, 0x098E, 0x0402},	/* LOGICAL_ADDRESS_ACCESS [SEQ_ALGO] */
{MT9P111_REG16, 0x8402, 0x0028},	/* SEQ_ALGO */
{MT9P111_REG8, 0xAC44, 0x00},		/* AWB_LEFT_CCM_POS_RANGE_LIMIT */
{MT9P111_REG8, 0xAC45, 0x7F},		/* AWB_RIGHT_CCM_POS_RANGE_LIMIT */
{MT9P111_REG8, 0xAC08, 0x00},		/* AWB_CUR_CCM_POS */
{MT9P111_REG16, 0x32D4, 0x00B6},	/* DIGITAL_GAIN_1_RED */
{MT9P111_REG16, 0x32D6, 0x0080},	/* DIGITAL_GAIN_1_GREEN1 */
{MT9P111_REG16, 0x32D8, 0x0080},	/* DIGITAL_GAIN_1_GREEN2 */
{MT9P111_REG16, 0x32DA, 0x0100},	/* DIGITAL_GAIN_1_BLUE */
{MT9P111_REG8, 0xAC3C, 0x44},		/* AWB_MIN_ACCEPTED_PRE_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC3D, 0x48},		/* AWB_MAX_ACCEPTED_PRE_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC3E, 0x32},		/* AWB_MIN_ACCEPTED_PRE_AWB_B2G_RATIO */
{MT9P111_REG8, 0xAC3F, 0x36},		/* AWB_MAX_ACCEPTED_PRE_AWB_B2G_RATIO */
/* Left CCM & R/G B/g ratios */
{MT9P111_REG16, 0xAC46, 0x0351},	/* AWB_LEFT_CCM_0 */
{MT9P111_REG16, 0xAC48, 0xFDF6},	/* AWB_LEFT_CCM_1 */
{MT9P111_REG16, 0xAC4A, 0xFFBB},	/* AWB_LEFT_CCM_2 */
{MT9P111_REG16, 0xAC4C, 0xFF9C},	/* AWB_LEFT_CCM_3 */
{MT9P111_REG16, 0xAC4E, 0x01A8},	/* AWB_LEFT_CCM_4 */
{MT9P111_REG16, 0xAC50, 0xFFBF},	/* AWB_LEFT_CCM_5 */
{MT9P111_REG16, 0xAC52, 0xFFF7},	/* AWB_LEFT_CCM_6 */
{MT9P111_REG16, 0xAC54, 0xFE89},	/* AWB_LEFT_CCM_7 */
{MT9P111_REG16, 0xAC56, 0x0283},	/* AWB_LEFT_CCM_8 */
/* Right CCM */
{MT9P111_REG16, 0xAC5C, 0x0351},	/* AWB_RIGHT_CCM_0 */
{MT9P111_REG16, 0xAC5E, 0xFDF6},	/* AWB_RIGHT_CCM_1 */
{MT9P111_REG16, 0xAC60, 0xFFBB},	/* AWB_RIGHT_CCM_2 */
{MT9P111_REG16, 0xAC62, 0xFF9C},	/* AWB_RIGHT_CCM_3 */
{MT9P111_REG16, 0xAC64, 0x01A8},	/* AWB_RIGHT_CCM_4 */
{MT9P111_REG16, 0xAC66, 0xFFBF},	/* AWB_RIGHT_CCM_5 */
{MT9P111_REG16, 0xAC68, 0xFFF7},	/* AWB_RIGHT_CCM_6 */
{MT9P111_REG16, 0xAC6A, 0xFE89},	/* AWB_RIGHT_CCM_7 */
{MT9P111_REG16, 0xAC6C, 0x0283},	/* AWB_RIGHT_CCM_8 */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_POLL8, 0x8404, 0x00, 0xFF},
{MT9P111_REG8, 0xD005, 0x01},		/* PGA_CURRENT_ZONE -- Specify PGA Zone to 0~2 */
{MT9P111_REG16, 0xD002, 0x8003},	/* PGA_ALGO  */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg white_balance_cloudy[] = {
/* MWB for 7500K */
{MT9P111_REG16, 0x098E, 0x0402},	/* LOGICAL_ADDRESS_ACCESS [SEQ_ALGO] */
{MT9P111_REG16, 0x8402, 0x0028},	/* SEQ_ALGO */
{MT9P111_REG8, 0xAC44, 0x00},		/* AWB_LEFT_CCM_POS_RANGE_LIMIT */
{MT9P111_REG8, 0xAC45, 0x7F},		/* AWB_RIGHT_CCM_POS_RANGE_LIMIT */
{MT9P111_REG8, 0xAC08, 0x00},		/* AWB_CUR_CCM_POS */
{MT9P111_REG16, 0x32D4, 0x00CE},	/* DIGITAL_GAIN_1_RED */
{MT9P111_REG16, 0x32D6, 0x0080},	/* DIGITAL_GAIN_1_GREEN1 */
{MT9P111_REG16, 0x32D8, 0x0080},	/* DIGITAL_GAIN_1_GREEN2 */
{MT9P111_REG16, 0x32DA, 0x00B4},	/* DIGITAL_GAIN_1_BLUE */
{MT9P111_REG8, 0xAC3C, 0x33},		/* AWB_MIN_ACCEPTED_PRE_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC3D, 0x37},		/* AWB_MAX_ACCEPTED_PRE_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC3E, 0x58},		/* AWB_MIN_ACCEPTED_PRE_AWB_B2G_RATIO */
{MT9P111_REG8, 0xAC3F, 0x5C},		/* AWB_MAX_ACCEPTED_PRE_AWB_B2G_RATIO */
/* Left CCM & R/G B/g ratios */
{MT9P111_REG16, 0xAC46, 0x0319},	/* AWB_LEFT_CCM_0 */
{MT9P111_REG16, 0xAC48, 0xFDFB},	/* AWB_LEFT_CCM_1 */
{MT9P111_REG16, 0xAC4A, 0xFFEF},	/* AWB_LEFT_CCM_2 */
{MT9P111_REG16, 0xAC4C, 0xFF93},	/* AWB_LEFT_CCM_3 */
{MT9P111_REG16, 0xAC4E, 0x0197},	/* AWB_LEFT_CCM_4 */
{MT9P111_REG16, 0xAC50, 0xFFD9},	/* AWB_LEFT_CCM_5 */
{MT9P111_REG16, 0xAC52, 0x0002},	/* AWB_LEFT_CCM_6 */
{MT9P111_REG16, 0xAC54, 0xFF08},	/* AWB_LEFT_CCM_7 */
{MT9P111_REG16, 0xAC56, 0x01F8},	/* AWB_LEFT_CCM_8 */
/* Right CCM */
{MT9P111_REG16, 0xAC5C, 0x0319},	/* AWB_RIGHT_CCM_0 */
{MT9P111_REG16, 0xAC5E, 0xFDFB},	/* AWB_RIGHT_CCM_1 */
{MT9P111_REG16, 0xAC60, 0xFFEF},	/* AWB_RIGHT_CCM_2 */
{MT9P111_REG16, 0xAC62, 0xFF93},	/* AWB_RIGHT_CCM_3 */
{MT9P111_REG16, 0xAC64, 0x0197},	/* AWB_RIGHT_CCM_4 */
{MT9P111_REG16, 0xAC66, 0xFFD9},	/* AWB_RIGHT_CCM_5 */
{MT9P111_REG16, 0xAC68, 0x0002},	/* AWB_RIGHT_CCM_6 */
{MT9P111_REG16, 0xAC6A, 0xFF08},	/* AWB_RIGHT_CCM_7 */
{MT9P111_REG16, 0xAC6C, 0x01F8},	/* AWB_RIGHT_CCM_8 */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_POLL8, 0x8404, 0x00, 0xFF},
{MT9P111_REG8, 0xD005, 0x02},		/* PGA_CURRENT_ZONE -- Specify PGA Zone to 0~2 */
{MT9P111_REG16, 0xD002, 0x8003},	/* PGA_ALGO  */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg exposure_0[] = {
{MT9P111_REG16, 0x098E, 0xA409},	/* LOGICAL_ADDRESS_ACCESS [AE_RULE_BASE_TARGET] */
{MT9P111_REG8, 0xA409, 0x37},		/* AE_RULE_BASE_TARGET */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg exposure_plus_1[] = {
{MT9P111_REG16, 0x098E, 0xA409},	/* LOGICAL_ADDRESS_ACCESS [AE_RULE_BASE_TARGET] */
{MT9P111_REG8, 0xA409, 0x44},		/* AE_RULE_BASE_TARGET */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg exposure_plus_2[] = {
{MT9P111_REG16, 0x098E, 0xA409},	/* LOGICAL_ADDRESS_ACCESS [AE_RULE_BASE_TARGET] */
{MT9P111_REG8, 0xA409, 0x53},		/* AE_RULE_BASE_TARGET */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg exposure_minus_1[] = {
{MT9P111_REG16, 0x098E, 0xA409},	/* LOGICAL_ADDRESS_ACCESS [AE_RULE_BASE_TARGET] */
{MT9P111_REG8, 0xA409, 0x2E},		/* AE_RULE_BASE_TARGET */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg exposure_minus_2[] = {
{MT9P111_REG16, 0x098E, 0xA409},	/* LOGICAL_ADDRESS_ACCESS [AE_RULE_BASE_TARGET] */
{MT9P111_REG8, 0xA409, 0x26},		/* AE_RULE_BASE_TARGET */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg flash_on[] = {
{MT9P111_REG16, 0x098E, 0x8423},	/* LOGICAL_ADDRESS_ACCESS */
{MT9P111_REG8, 0x8423, 0x04},		/* SEQ_STATE_CFG_2_FS */
{MT9P111_REG8, 0x8424, 0x06},		/* SEQ_STATE_CFG_2_MAX_FRAME_CNT */
{MT9P111_REG8, 0x843B, 0x04},		/* SEQ_STATE_CFG_5_FS */
{MT9P111_REG8, 0x841E, 0x00},		/* SEQ_STATE_CFG_2_AE */
{MT9P111_REG8, 0x8420, 0x00},		/* SEQ_STATE_CFG_2_AWB */
{MT9P111_REG8, 0xC057, 0x0F},		/* FLASH_HW_UNIT_2_BRIGHTNESS_TH */
{MT9P111_REG8, 0xC058, 0x02},		/* FLASH_HW_UNIT_2_MODE */
{MT9P111_REG16, 0xFC00, 0x0004},	/* FS_ALGO */
{MT9P111_REG8, 0x8404, 0x05},		/* SEQ_CMD */
{MT9P111_POLL8, 0x8404, 0x00, 0xFF},
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg flash_off[] = {
{MT9P111_REG16, 0x098E, 0x8423},	/* LOGICAL_ADDRESS_ACCESS */
{MT9P111_REG8, 0x8423, 0x00},		/* SEQ_STATE_CFG_2_FS */
{MT9P111_REG8, 0x8424, 0x00},		/* SEQ_STATE_CFG_2_MAX_FRAME_CNT */
{MT9P111_REG8, 0x843B, 0x00},		/* SEQ_STATE_CFG_5_FS */
{MT9P111_REG8, 0x841E, 0x02},		/* SEQ_STATE_CFG_2_AE */
{MT9P111_REG8, 0x8420, 0x02},		/* SEQ_STATE_CFG_2_AWB */
{MT9P111_REG8, 0xC058, 0x00},		/* FLASH_HW_UNIT_2_MODE */
{MT9P111_REG16, 0xFC00, 0x0000},	/* FS_ALGO */
{MT9P111_REG8, 0x8404, 0x05},		/* SEQ_CMD */
{MT9P111_POLL8, 0x8404, 0x00, 0xFF},
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg flash_auto[] = {
{MT9P111_REG16, 0x098E, 0x8423},	/* LOGICAL_ADDRESS_ACCESS */
{MT9P111_REG8, 0x8423, 0x04},		/* SEQ_STATE_CFG_2_FS */
{MT9P111_REG8, 0x8424, 0x06},		/* SEQ_STATE_CFG_2_MAX_FRAME_CNT */
{MT9P111_REG8, 0x843B, 0x04},		/* SEQ_STATE_CFG_5_FS */
{MT9P111_REG8, 0x841E, 0x02},		/* SEQ_STATE_CFG_2_AE */
{MT9P111_REG8, 0x8420, 0x02},		/* SEQ_STATE_CFG_2_AWB */
{MT9P111_REG8, 0xC057, 0x04},		/* FLASH_HW_UNIT_2_BRIGHTNESS_TH */
{MT9P111_REG8, 0xC058, 0x02},		/* FLASH_HW_UNIT_2_MODE */
{MT9P111_REG16, 0xFC00, 0x0004},	/* FS_ALGO */
{MT9P111_REG8, 0x8404, 0x05},		/* SEQ_CMD */
{MT9P111_POLL8, 0x8404, 0x00, 0xFF},
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg exposoure_rect_deafult[] = {
{MT9P111_REG16, 0x098E, 0xB820},	/* LOGICAL_ADDRESS_ACCESS [STAT_AE_WINDOW_POS_X] */
{MT9P111_REG8, 0xB820, 0x26},		/* STAT_AE_WINDOW_POS_X */
{MT9P111_REG8, 0xB821, 0x26},		/* STAT_AE_WINDOW_POS_Y */
{MT9P111_REG8, 0xB822, 0xB5},		/* STAT_AE_WINDOW_SIZE_X */
{MT9P111_REG8, 0xB823, 0xB5},		/* STAT_AE_WINDOW_SIZE_Y */
{MT9P111_REG8, 0x8404, 0x05},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg focus_rect_deafult[] = {
{MT9P111_REG16, 0x098E, 0xB854},	/* LOGICAL_ADDRESS_ACCESS [STAT_SM_WINDOW_POS_X] */
{MT9P111_REG8, 0xB854, 0x20},		/* STAT_SM_WINDOW_POS_X */
{MT9P111_REG8, 0xB855, 0x20},		/* STAT_SM_WINDOW_POS_Y */
{MT9P111_REG8, 0xB856, 0xBF},		/* STAT_SM_WINDOW_SIZE_X */
{MT9P111_REG8, 0xB857, 0xBF},		/* STAT_SM_WINDOW_SIZE_Y */
{MT9P111_REG8, 0x8404, 0x05},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg exposoure_rect[] = {
{MT9P111_REG16, 0x098E, 0xB820},	/* LOGICAL_ADDRESS_ACCESS [STAT_AE_WINDOW_POS_X] */
{MT9P111_REG8, 0xB820, 0x26},		/* STAT_AE_WINDOW_POS_X */
{MT9P111_REG8, 0xB821, 0x26},		/* STAT_AE_WINDOW_POS_Y */
{MT9P111_REG8, 0xB822, 0xB5},		/* STAT_AE_WINDOW_SIZE_X */
{MT9P111_REG8, 0xB823, 0xB5},		/* STAT_AE_WINDOW_SIZE_Y */
{MT9P111_REG8, 0x8404, 0x05},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg focus_rect[] = {
{MT9P111_REG16, 0x098E, 0xB854},	/* LOGICAL_ADDRESS_ACCESS [STAT_SM_WINDOW_POS_X] */
{MT9P111_REG8, 0xB854, 0x20},		/* STAT_SM_WINDOW_POS_X */
{MT9P111_REG8, 0xB855, 0x20},		/* STAT_SM_WINDOW_POS_Y */
{MT9P111_REG8, 0xB856, 0xBF},		/* STAT_SM_WINDOW_SIZE_X */
{MT9P111_REG8, 0xB857, 0xBF},		/* STAT_SM_WINDOW_SIZE_Y */
{MT9P111_REG8, 0x8404, 0x05},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg capture_XxY[] = {
{MT9P111_REG16, 0x098E, 0x1000},	/* LOGICAL_ADDRESS_ACCESS */
{MT9P111_REG16, 0xC8C0, 0x0A20},	/* CAM_OUTPUT_1_IMAGE_WIDTH */
{MT9P111_REG16, 0xC8C2, 0x0798},	/* CAM_OUTPUT_1_IMAGE_HEIGHT */
{MT9P111_REG8, 0x8404, 0x06},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg mode_capture[] = {
{MT9P111_REG16, 0x098E, 0x1000},	/* LOGICAL_ADDRESS_ACCESS [IO_NV_MEM_COMMAND] */
{MT9P111_POLL8, 0x8405, 0x03, 0xFB},	/* Wait Preview(0x03) or Capture(0x07) */
{MT9P111_REG8, 0xC05A, 0x00},		/* Reset flash status to 0x00 */
{MT9P111_REG8, 0x843C, 0xFF},		/* SEQ_STATE_CFG_5_MAX_FRAME_CNT */
{MT9P111_REG8, 0x8404, 0x02},		/* SEQ_CMD */
{MT9P111_POLL8, 0x8405, 0x06, 0xFE},	/* Wait Capture(0x07) */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg mode_preview[] = {
{MT9P111_REG16, 0x098E, 0x1000},	/* LOGICAL_ADDRESS_ACCESS [IO_NV_MEM_COMMAND] */
{MT9P111_POLL8, 0x8405, 0x03, 0xFB},	/* Wait Preview(0x03) or Capture(0x07) */
{MT9P111_REG8, 0x8404, 0x01},		/* SEQ_CMD */
{MT9P111_POLL8, 0x8405, 0x03, 0xFF},	/* Wait Preview(0x03) */
{MT9P111_TABLE_END, 0, 0}
};

#ifdef CONFIG_MACH_AVALON
static struct mt9p111_reg orientation_normal[] = {
{MT9P111_REG8, 0xC850, 0x00},		/* Orientation (A) = 0 */
{MT9P111_REG8, 0xC851, 0x00},		/* Pixel Order (A) = 0 */
{MT9P111_REG8, 0xC888, 0x00},		/* Orientation (B) = 0 */
{MT9P111_REG8, 0xC889, 0x00},		/* Pixel Order (B) = 0 */
{MT9P111_TABLE_END, 0, 0}
};
#endif

static struct mt9p111_reg apga_otpm_lsc[] = {
/* OTPM LSC with APGA enable */
{MT9P111_REG16, 0x098E, 0x1000},	/* LOGICAL_ADDRESS_ACCESS [PGA_SOLUTION] */
{MT9P111_REG8, 0xD004, 0x04},		/* PGA_SOLUTION */
{MT9P111_REG16, 0xD006, 0x0000},	/* PGA_ZONE_ADDR_0 */
{MT9P111_REG16, 0xD008, 0x0100},	/* PGA_ZONE_ADDR_1 */
{MT9P111_REG16, 0xD00A, 0x0200},	/* PGA_ZONE_ADDR_2 */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg apga_patch_ram_lsc[] = {
/* APGA patch RAM LSC, Zone 0, A-light, start address is 0x1580 (5504) */
{MT9P111_REG16, 0x0982, 0x0000},	/* ACCESS_CTL_STAT */
{MT9P111_REG16, 0x098A, 0x1580},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x7D8F},
{MT9P111_REG16, 0x0992, 0x48CD},
{MT9P111_REG16, 0x0994, 0x6C91},
{MT9P111_REG16, 0x0996, 0xA5AE},
{MT9P111_REG16, 0x0998, 0xBC91},
{MT9P111_REG16, 0x099A, 0x00D0},
{MT9P111_REG16, 0x099C, 0xABCE},
{MT9P111_REG16, 0x099E, 0x7051},
{MT9P111_REG16, 0x098A, 0x1590},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x266F},
{MT9P111_REG16, 0x0992, 0xE8D1},
{MT9P111_REG16, 0x0994, 0x0170},
{MT9P111_REG16, 0x0996, 0x33AD},
{MT9P111_REG16, 0x0998, 0x2D30},
{MT9P111_REG16, 0x099A, 0xDF4E},
{MT9P111_REG16, 0x099C, 0xBECF},
{MT9P111_REG16, 0x099E, 0x0070},
{MT9P111_REG16, 0x098A, 0x15A0},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0xB50E},
{MT9P111_REG16, 0x0992, 0x0612},
{MT9P111_REG16, 0x0994, 0x768A},
{MT9P111_REG16, 0x0996, 0xDD11},
{MT9P111_REG16, 0x0998, 0x244D},
{MT9P111_REG16, 0x099A, 0x91AE},
{MT9P111_REG16, 0x099C, 0xFA2F},
{MT9P111_REG16, 0x099E, 0x30CE},
{MT9P111_REG16, 0x098A, 0x15B0},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x2CD0},
{MT9P111_REG16, 0x0992, 0x1FCE},
{MT9P111_REG16, 0x0994, 0x42CD},
{MT9P111_REG16, 0x0996, 0x8D4F},
{MT9P111_REG16, 0x0998, 0x866F},
{MT9P111_REG16, 0x099A, 0x5BAE},
{MT9P111_REG16, 0x099C, 0xB1ED},
{MT9P111_REG16, 0x099E, 0x264C},
{MT9P111_REG16, 0x098A, 0x15C0},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x2CEF},
{MT9P111_REG16, 0x0992, 0xD3ED},
{MT9P111_REG16, 0x0994, 0xD9AF},
{MT9P111_REG16, 0x0996, 0x676D},
{MT9P111_REG16, 0x0998, 0x83AF},
{MT9P111_REG16, 0x099A, 0xF0CD},
{MT9P111_REG16, 0x099C, 0x040F},
{MT9P111_REG16, 0x099E, 0x880F},
{MT9P111_REG16, 0x098A, 0x15D0},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x1652},
{MT9P111_REG16, 0x0992, 0x730E},
{MT9P111_REG16, 0x0994, 0x8CF3},
{MT9P111_REG16, 0x0996, 0x166F},
{MT9P111_REG16, 0x0998, 0x1E53},
{MT9P111_REG16, 0x099A, 0x17B2},
{MT9P111_REG16, 0x099C, 0xCE2F},
{MT9P111_REG16, 0x099E, 0xF7B2},
{MT9P111_REG16, 0x098A, 0x15E0},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x2E6F},
{MT9P111_REG16, 0x0992, 0x2373},
{MT9P111_REG16, 0x0994, 0x4DB1},
{MT9P111_REG16, 0x0996, 0x3FCE},
{MT9P111_REG16, 0x0998, 0xB292},
{MT9P111_REG16, 0x099A, 0x3D6F},
{MT9P111_REG16, 0x099C, 0x0853},
{MT9P111_REG16, 0x099E, 0x1992},
{MT9P111_REG16, 0x098A, 0x15F0},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0xC4AF},
{MT9P111_REG16, 0x0992, 0x86B3},
{MT9P111_REG16, 0x0994, 0x12F0},
{MT9P111_REG16, 0x0996, 0x0BD3},
{MT9P111_REG16, 0x0998, 0xB34F},
{MT9P111_REG16, 0x099A, 0x9725},
{MT9P111_REG16, 0x099C, 0xA871},
{MT9P111_REG16, 0x099E, 0xBBD0},
{MT9P111_REG16, 0x098A, 0x1600},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x5A93},
{MT9P111_REG16, 0x0992, 0xD74C},
{MT9P111_REG16, 0x0994, 0x0FEE},
{MT9P111_REG16, 0x0996, 0xB032},
{MT9P111_REG16, 0x0998, 0xA490},
{MT9P111_REG16, 0x099A, 0x16F4},
{MT9P111_REG16, 0x099C, 0xA5D0},
{MT9P111_REG16, 0x099E, 0xFC4E},
{MT9P111_REG16, 0x098A, 0x1610},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0xBEED},
{MT9P111_REG16, 0x0992, 0x2D8F},
{MT9P111_REG16, 0x0994, 0x6272},
{MT9P111_REG16, 0x0996, 0xA5B0},
{MT9P111_REG16, 0x0998, 0x0FEF},
{MT9P111_REG16, 0x099A, 0xF011},
{MT9P111_REG16, 0x099C, 0x8551},
{MT9P111_REG16, 0x099E, 0x2C54},
{MT9P111_REG16, 0x098A, 0x1620},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0xC231},
{MT9P111_REG16, 0x0992, 0x33CF},
{MT9P111_REG16, 0x0994, 0xD234},
{MT9P111_REG16, 0x0996, 0xEC33},
{MT9P111_REG16, 0x0998, 0x2657},
{MT9P111_REG16, 0x099A, 0xB4F1},
{MT9P111_REG16, 0x099C, 0x2C51},
{MT9P111_REG16, 0x099E, 0xB174},
{MT9P111_REG16, 0x098A, 0x1630},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x8914},
{MT9P111_REG16, 0x0992, 0x1197},
{MT9P111_REG16, 0x0994, 0xA411},
{MT9P111_REG16, 0x0996, 0x6DED},
{MT9P111_REG16, 0x0998, 0x9AB3},
{MT9P111_REG16, 0x099A, 0xA433},
{MT9P111_REG16, 0x099C, 0x5696},
{MT9P111_REG16, 0x099E, 0xC091},
{MT9P111_REG16, 0x098A, 0x1640},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x5A31},
{MT9P111_REG16, 0x0992, 0xE834},
{MT9P111_REG16, 0x0994, 0xA194},
{MT9P111_REG16, 0x0996, 0x2FF7},
{MT9P111_REG16, 0x0998, 0x042C},
{MT9P111_REG16, 0x099A, 0x04CC},
{MT9P111_REG16, 0x099C, 0x0000},
{MT9P111_REG16, 0x099E, 0x0000},
/* APGA patch RAM LSC, Zone 1, CWF or TL84, start address is 0x164C (5708) */
{MT9P111_REG16, 0x098A, 0x164C},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x7CAF},
{MT9P111_REG16, 0x0992, 0x800D},	/* 0x22ED, akeem modified to reduce left side red */
{MT9P111_REG16, 0x0994, 0x70B1},
{MT9P111_REG16, 0x0996, 0x8EA9},
{MT9P111_REG16, 0x0998, 0xC4F1},
{MT9P111_REG16, 0x099A, 0x0050},
{MT9P111_REG16, 0x099C, 0x800E},	/* 0x89AE, akeem modified to reduce left side red */
{MT9P111_REG16, 0x099E, 0x2231},
{MT9P111_REG16, 0x098A, 0x165C},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x4C2F},
{MT9P111_REG16, 0x0992, 0x9E71},
{MT9P111_REG16, 0x0994, 0x0010},
{MT9P111_REG16, 0x0996, 0x536D},
{MT9P111_REG16, 0x0998, 0x62F0},
{MT9P111_REG16, 0x099A, 0x99EE},
{MT9P111_REG16, 0x099C, 0x9A50},
{MT9P111_REG16, 0x099E, 0x0130},
{MT9P111_REG16, 0x098A, 0x166C},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x802E},	/* 0xCD6E, akeem modified to reduce left side red */
{MT9P111_REG16, 0x0992, 0x7B11},
{MT9P111_REG16, 0x0994, 0x682E},
{MT9P111_REG16, 0x0996, 0xD431},
{MT9P111_REG16, 0x0998, 0x38EC},
{MT9P111_REG16, 0x099A, 0xFB8D},
{MT9P111_REG16, 0x099C, 0xA3EF},
{MT9P111_REG16, 0x099E, 0x53CD},
{MT9P111_REG16, 0x098A, 0x167C},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x1E70},
{MT9P111_REG16, 0x0992, 0x342E},	/* 0x042E, akeem modified to reduce left side red */
{MT9P111_REG16, 0x0994, 0x104E},
{MT9P111_REG16, 0x0996, 0xFC4E},
{MT9P111_REG16, 0x0998, 0xC42F},
{MT9P111_REG16, 0x099A, 0x7D0F},
{MT9P111_REG16, 0x099C, 0xE42C},
{MT9P111_REG16, 0x099E, 0x604D},
{MT9P111_REG16, 0x098A, 0x168C},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x2B4F},
{MT9P111_REG16, 0x0992, 0x81CF},
{MT9P111_REG16, 0x0994, 0x9A8F},
{MT9P111_REG16, 0x0996, 0x52ED},
{MT9P111_REG16, 0x0998, 0xF1CE},
{MT9P111_REG16, 0x099A, 0x2AC9},
{MT9P111_REG16, 0x099C, 0x29EF},
{MT9P111_REG16, 0x099E, 0x9D8F},
{MT9P111_REG16, 0x098A, 0x169C},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x1232},
{MT9P111_REG16, 0x0992, 0x0210},
{MT9P111_REG16, 0x0994, 0x9DB3},
{MT9P111_REG16, 0x0996, 0xFFCE},
{MT9P111_REG16, 0x0998, 0x3ED3},
{MT9P111_REG16, 0x099A, 0x6A71},
{MT9P111_REG16, 0x099C, 0xEC8C},
{MT9P111_REG16, 0x099E, 0xDD72},
{MT9P111_REG16, 0x098A, 0x16AC},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0xF28D},
{MT9P111_REG16, 0x0992, 0x1F73},
{MT9P111_REG16, 0x0994, 0x60F1},
{MT9P111_REG16, 0x0996, 0x3B6F},
{MT9P111_REG16, 0x0998, 0xDCF2},
{MT9P111_REG16, 0x099A, 0x028E},
{MT9P111_REG16, 0x099C, 0x2573},
{MT9P111_REG16, 0x099E, 0x1812},
{MT9P111_REG16, 0x098A, 0x16BC},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0xA86C},
{MT9P111_REG16, 0x0992, 0x90F3},
{MT9P111_REG16, 0x0994, 0x25ED},
{MT9P111_REG16, 0x0996, 0x13B3},
{MT9P111_REG16, 0x0998, 0xBFAE},
{MT9P111_REG16, 0x099A, 0x6569},
{MT9P111_REG16, 0x099C, 0xAA4F},
{MT9P111_REG16, 0x099E, 0x8AAF},
{MT9P111_REG16, 0x098A, 0x16CC},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0xC04F},
{MT9P111_REG16, 0x0992, 0xE80C},
{MT9P111_REG16, 0x0994, 0xA8EC},
{MT9P111_REG16, 0x0996, 0x8910},
{MT9P111_REG16, 0x0998, 0x25AF},
{MT9P111_REG16, 0x099A, 0x6F4F},
{MT9P111_REG16, 0x099C, 0x8E10},
{MT9P111_REG16, 0x099E, 0xF26F},
{MT9P111_REG16, 0x098A, 0x16DC},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x1C30},
{MT9P111_REG16, 0x0992, 0x17B1},
{MT9P111_REG16, 0x0994, 0xD5D0},
{MT9P111_REG16, 0x0996, 0x8370},
{MT9P111_REG16, 0x0998, 0x1DAF},
{MT9P111_REG16, 0x099A, 0xC1D0},
{MT9P111_REG16, 0x099C, 0xCD91},
{MT9P111_REG16, 0x099E, 0x0353},
{MT9P111_REG16, 0x098A, 0x16EC},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0xCED1},
{MT9P111_REG16, 0x0992, 0x2E0F},
{MT9P111_REG16, 0x0994, 0xA694},
{MT9P111_REG16, 0x0996, 0xBA74},
{MT9P111_REG16, 0x0998, 0x23B7},
{MT9P111_REG16, 0x099A, 0xC3D1},
{MT9P111_REG16, 0x099C, 0x1011},
{MT9P111_REG16, 0x099E, 0x9F13},
{MT9P111_REG16, 0x098A, 0x16FC},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0xC9B4},
{MT9P111_REG16, 0x0992, 0x7316},
{MT9P111_REG16, 0x0994, 0xC511},
{MT9P111_REG16, 0x0996, 0x0D2F},
{MT9P111_REG16, 0x0998, 0xC9B2},
{MT9P111_REG16, 0x099A, 0x9394},
{MT9P111_REG16, 0x099C, 0x5CD6},
{MT9P111_REG16, 0x099E, 0xC7F1},
{MT9P111_REG16, 0x098A, 0x170C},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x7AB1},
{MT9P111_REG16, 0x0992, 0xBFB4},
{MT9P111_REG16, 0x0994, 0x8E15},
{MT9P111_REG16, 0x0996, 0x3157},
{MT9P111_REG16, 0x0998, 0x0418},
{MT9P111_REG16, 0x099A, 0x04A4},
{MT9P111_REG16, 0x099C, 0x0000},
{MT9P111_REG16, 0x099E, 0x0000},
/* APGA patch RAM LSC, Zone 2, D65 or DNP, start address is 0x1718 (5912) */
{MT9P111_REG16, 0x098A, 0x1718},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x7CEF},
{MT9P111_REG16, 0x0992, 0x3B2D},
{MT9P111_REG16, 0x0994, 0x0092},
{MT9P111_REG16, 0x0996, 0x4A4C},
{MT9P111_REG16, 0x0998, 0xD1B1},
{MT9P111_REG16, 0x099A, 0x0050},
{MT9P111_REG16, 0x099C, 0xFAAD},
{MT9P111_REG16, 0x099E, 0x2D71},
{MT9P111_REG16, 0x098A, 0x1728},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x6C2F},
{MT9P111_REG16, 0x0992, 0xAF31},
{MT9P111_REG16, 0x0994, 0x7E2F},
{MT9P111_REG16, 0x0996, 0x4B8D},
{MT9P111_REG16, 0x0998, 0x2BD1},
{MT9P111_REG16, 0x099A, 0x3B2B},
{MT9P111_REG16, 0x099C, 0x8431},
{MT9P111_REG16, 0x099E, 0x00F0},
{MT9P111_REG16, 0x098A, 0x1738},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0xBFCE},
{MT9P111_REG16, 0x0992, 0x6F91},
{MT9P111_REG16, 0x0994, 0x128F},
{MT9P111_REG16, 0x0996, 0xD4D1},
{MT9P111_REG16, 0x0998, 0xC645},
{MT9P111_REG16, 0x099A, 0xA40E},
{MT9P111_REG16, 0x099C, 0xB02F},
{MT9P111_REG16, 0x099E, 0x00CE},
{MT9P111_REG16, 0x098A, 0x1748},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x11D0},
{MT9P111_REG16, 0x0992, 0x548D},
{MT9P111_REG16, 0x0994, 0x05EE},
{MT9P111_REG16, 0x0996, 0x9C8C},
{MT9P111_REG16, 0x0998, 0x92CF},
{MT9P111_REG16, 0x099A, 0x93EE},
{MT9P111_REG16, 0x099C, 0x87EC},
{MT9P111_REG16, 0x099E, 0x422E},
{MT9P111_REG16, 0x098A, 0x1758},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x330F},
{MT9P111_REG16, 0x0992, 0xA94F},
{MT9P111_REG16, 0x0994, 0x90B0},
{MT9P111_REG16, 0x0996, 0x632C},
{MT9P111_REG16, 0x0998, 0xF3EE},
{MT9P111_REG16, 0x099A, 0x1F2E},
{MT9P111_REG16, 0x099C, 0x46EF},
{MT9P111_REG16, 0x099E, 0xAB70},
{MT9P111_REG16, 0x098A, 0x1768},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x0F12},
{MT9P111_REG16, 0x0992, 0x1C50},
{MT9P111_REG16, 0x0994, 0x8C13},
{MT9P111_REG16, 0x0996, 0xC2CF},
{MT9P111_REG16, 0x0998, 0x29B3},
{MT9P111_REG16, 0x099A, 0x79D1},
{MT9P111_REG16, 0x099C, 0x978E},
{MT9P111_REG16, 0x099E, 0x9092},
{MT9P111_REG16, 0x098A, 0x1778},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x3F6F},
{MT9P111_REG16, 0x0992, 0x15F1},
{MT9P111_REG16, 0x0994, 0x0332},
{MT9P111_REG16, 0x0996, 0x0071},
{MT9P111_REG16, 0x0998, 0x8232},
{MT9P111_REG16, 0x099A, 0xDA11},
{MT9P111_REG16, 0x099C, 0x5970},
{MT9P111_REG16, 0x099E, 0x1CF2},
{MT9P111_REG16, 0x098A, 0x1788},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x83AD},
{MT9P111_REG16, 0x0992, 0xFFD2},
{MT9P111_REG16, 0x0994, 0xB6EB},
{MT9P111_REG16, 0x0996, 0x0313},
{MT9P111_REG16, 0x0998, 0x9FAE},
{MT9P111_REG16, 0x099A, 0x30ED},
{MT9P111_REG16, 0x099C, 0xA5AE},
{MT9P111_REG16, 0x099E, 0xC7AF},
{MT9P111_REG16, 0x098A, 0x1798},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x8B8F},
{MT9P111_REG16, 0x0992, 0x388D},
{MT9P111_REG16, 0x0994, 0x692D},
{MT9P111_REG16, 0x0996, 0x9672},
{MT9P111_REG16, 0x0998, 0xD38F},
{MT9P111_REG16, 0x099A, 0x1D93},
{MT9P111_REG16, 0x099C, 0x9FB0},
{MT9P111_REG16, 0x099E, 0xE2EF},
{MT9P111_REG16, 0x098A, 0x17A8},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x20AF},
{MT9P111_REG16, 0x0992, 0x42D0},
{MT9P111_REG16, 0x0994, 0x7E71},
{MT9P111_REG16, 0x0996, 0xE74F},
{MT9P111_REG16, 0x0998, 0x2F2E},
{MT9P111_REG16, 0x099A, 0x95F1},
{MT9P111_REG16, 0x099C, 0x8091},
{MT9P111_REG16, 0x099E, 0x2A33},
{MT9P111_REG16, 0x098A, 0x17B8},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0xCF51},
{MT9P111_REG16, 0x0992, 0x7CAD},
{MT9P111_REG16, 0x0994, 0xB8B4},
{MT9P111_REG16, 0x0996, 0xB974},
{MT9P111_REG16, 0x0998, 0x1FF7},
{MT9P111_REG16, 0x099A, 0xB211},
{MT9P111_REG16, 0x099C, 0x6EB1},
{MT9P111_REG16, 0x099E, 0xD014},
{MT9P111_REG16, 0x098A, 0x17C8},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0xF374},
{MT9P111_REG16, 0x0992, 0x1AF7},
{MT9P111_REG16, 0x0994, 0x9E51},
{MT9P111_REG16, 0x0996, 0xB211},
{MT9P111_REG16, 0x0998, 0xECD4},
{MT9P111_REG16, 0x099A, 0xB1F3},
{MT9P111_REG16, 0x099C, 0x22D7},
{MT9P111_REG16, 0x099E, 0xC811},
{MT9P111_REG16, 0x098A, 0x17D8},	/* Patch RAM Address */
{MT9P111_REG16, 0x0990, 0x0272},
{MT9P111_REG16, 0x0992, 0xDDD4},
{MT9P111_REG16, 0x0994, 0x86B5},
{MT9P111_REG16, 0x0996, 0x3177},
{MT9P111_REG16, 0x0998, 0x0404},
{MT9P111_REG16, 0x099A, 0x04A4},
{MT9P111_REG16, 0x099C, 0x0000},
{MT9P111_REG16, 0x099E, 0x0000},
/*
 * Load PGA settings from Patch RAM with APGA function enabled
 * for using 3 PGA settings for all CT conditions,
 * enalbe PGA setting
 */
{MT9P111_REG16, 0x098E, 0x1000},	/* LOGICAL_ADDRESS_ACCESS [PGA_SOLUTION] */
{MT9P111_REG8, 0xD004, 0x02},		/* PGA_SOLUTION */
{MT9P111_REG16, 0xD006, 0x1580},	/* PGA_ZONE_ADDR_0 -- this is the address of PGA Zone 0 */
{MT9P111_REG16, 0xD008, 0x164C},	/* PGA_ZONE_ADDR_1 -- this is the address of PGA Zone 1 */
{MT9P111_REG16, 0xD00A, 0x1718},	/* PGA_ZONE_ADDR_2 -- this is the address of PGA Zone 2 */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg mode_init_start[] = {
/* For 24 MHz input, VCO=768 MHz */
{MT9P111_REG16, 0x0010, 0x0340},	/* PLL Dividers = 832 */
{MT9P111_REG16, 0x0012, 0x0070},	/* PLL P Dividers = 112 */
{MT9P111_REG16, 0x0014, 0x20F5},	/* PLL Control: TEST_BYPASS off = 8437 */
{MT9P111_REG16, 0x001A, 0x001C},	/* RESET_AND_MISC_CONTROL (select MIPI) */
{MT9P111_REG16, 0x001E, 0x0000},	/* PAD_SLEW_PAD_CONFIG */
{MT9P111_REG16, 0x0022, 0x0048},	/* VDD_DIS Counter Delay = 72 */
{MT9P111_REG16, 0x002A, 0x7FFF},	/* PLL P Dividers 4-5-6 = 32767 */
{MT9P111_REG16, 0x002C, 0x0000},	/* PLL P Dividers 7 = 0 */
{MT9P111_REG16, 0x002E, 0x0000},	/* Sensor Clock Divider = 0 */
{MT9P111_REG16, 0x0018, 0x400C},	/* Standby Control and Status: Out of standby */
{MT9P111_POLL16, 0x0018, 0x200C, 0xE07F},
/* Default variable access mode is always logical */
{MT9P111_REG16, 0x098E, 0x0000},
/* Set the sensor core RESET_REGISTER default state */
{MT9P111_REG16, 0x301A, 0x0030},
/* Char settings */
/* Fix both low light greenish problem and reddish at center problem */
{MT9P111_REG16, 0x305E, 0x10A0},	/* GLOBAL_GAIN */
{MT9P111_REG16, 0x30B6, 0x0008},	/* AUTOLR_CONTROL */
{MT9P111_REG16, 0x30D4, 0x9080},	/* COLUMN_CORRECTION */
/*
 * (txlo=0 at low gain) For reddish issue, workaround LFW ~3000e-,
 * min gain need 2.2x, changed, from 0xB43F, LFW 3.2ke-, min gain required 2x
 */
{MT9P111_REG16, 0x316C, 0xB430},	/* DAC_TXLO */
{MT9P111_REG16, 0x316E, 0xC400},	/* DAC_ECL */
/* Enabling show tagging induce dark pixels, that might cause red dot noise */
{MT9P111_REG16, 0x31E0, 0x0003},	/* PIX_DEF_ID */
{MT9P111_REG16, 0x337C, 0x0006},	/* YUV_YCBCR_CONTROL */
{MT9P111_REG16, 0x3E00, 0x0010},	/* SAMP_CONTROL */
{MT9P111_REG16, 0x3E02, 0xED02},	/* SAMP_ADDR_EN */
{MT9P111_REG16, 0x3E04, 0xC88C},	/* SAMP_RD1_SIG */
{MT9P111_REG16, 0x3E06, 0xC88C},	/* SAMP_RD1_SIG_BOOST */
{MT9P111_REG16, 0x3E08, 0x700A},	/* SAMP_RD1_RST */
{MT9P111_REG16, 0x3E0A, 0x701E},	/* SAMP_RD1_RST_BOOST */
{MT9P111_REG16, 0x3E0C, 0x00FF},	/* SAMP_RST1_EN */
{MT9P111_REG16, 0x3E0E, 0x00FF},	/* SAMP_RST1_BOOST */
{MT9P111_REG16, 0x3E10, 0x00FF},	/* SAMP_RST1_CLOOP_SH */
{MT9P111_REG16, 0x3E12, 0x0000},	/* SAMP_RST_BOOST_SEQ */
{MT9P111_REG16, 0x3E14, 0xC78C},	/* SAMP_SAMP1_SIG */
{MT9P111_REG16, 0x3E16, 0x6E06},	/* SAMP_SAMP1_RST */
{MT9P111_REG16, 0x3E18, 0xA58C},	/* SAMP_TX_EN */
{MT9P111_REG16, 0x3E1A, 0xA58E},	/* SAMP_TX_BOOST */
{MT9P111_REG16, 0x3E1C, 0xA58E},	/* SAMP_TX_CLOOP_SH */
{MT9P111_REG16, 0x3E1E, 0xC0D0},	/* SAMP_TX_BOOST_SEQ */
{MT9P111_REG16, 0x3E20, 0xEB00},	/* SAMP_VLN_EN */
{MT9P111_REG16, 0x3E22, 0x00FF},	/* SAMP_VLN_HOLD */
{MT9P111_REG16, 0x3E24, 0xEB02},	/* SAMP_VCL_EN */
{MT9P111_REG16, 0x3E26, 0xEA02},	/* SAMP_COLCLAMP */
{MT9P111_REG16, 0x3E28, 0xEB0A},	/* SAMP_SH_VCL */
{MT9P111_REG16, 0x3E2A, 0xEC01},	/* SAMP_SH_VREF */
{MT9P111_REG16, 0x3E2C, 0xEB01},	/* SAMP_SH_VBST */
{MT9P111_REG16, 0x3E2E, 0xF319},	/* SAMP_SPARE, substrate switch for BH */
{MT9P111_REG16, 0x3E30, 0x00F3},	/* SAMP_READOUT */
{MT9P111_REG16, 0x3E32, 0x3DFA},	/* SAMP_RESET_DONE */
{MT9P111_REG16, 0x3E34, 0x00FF},	/* SAMP_VLN_CLAMP */
{MT9P111_REG16, 0x3E36, 0x00F3},	/* SAMP_ASC_INT */
{MT9P111_REG16, 0x3E38, 0x0000},	/* SAMP_RS_CLOOP_SH_R */
{MT9P111_REG16, 0x3E3A, 0xF802},	/* SAMP_RS_CLOOP_SH */
{MT9P111_REG16, 0x3E3C, 0x0FFF},	/* SAMP_RS_BOOST_SEQ */
{MT9P111_REG16, 0x3E3E, 0xEA10},	/* SAMP_TXLO_GND */
{MT9P111_REG16, 0x3E40, 0xEB05},	/* SAMP_VLN_PER_COL */
{MT9P111_REG16, 0x3E42, 0xE5C8},	/* SAMP_RD2_SIG  */
{MT9P111_REG16, 0x3E44, 0xE5C8},	/* SAMP_RD2_SIG_BOOST */
{MT9P111_REG16, 0x3E46, 0x8C70},	/* SAMP_RD2_RST */
{MT9P111_REG16, 0x3E48, 0x8C71},	/* SAMP_RD2_RST_BOOST */
{MT9P111_REG16, 0x3E4A, 0x00FF},	/* SAMP_RST2_EN */
{MT9P111_REG16, 0x3E4C, 0x00FF},	/* SAMP_RST2_BOOST */
{MT9P111_REG16, 0x3E4E, 0x00FF},	/* SAMP_RST2_CLOOP_SH */
{MT9P111_REG16, 0x3E50, 0xE38D},	/* SAMP_SAMP2_SIG */
{MT9P111_REG16, 0x3E52, 0x8B0A},	/* SAMP_SAMP2_RST */
{MT9P111_REG16, 0x3E58, 0xEB0A},	/* SAMP_PIX_CLAMP_EN */
{MT9P111_REG16, 0x3E5C, 0x0A00},	/* SAMP_PIX_PULLUP_EN */
{MT9P111_REG16, 0x3E5E, 0x00FF},	/* SAMP_PIX_PULLDOWN_EN_R */
{MT9P111_REG16, 0x3E60, 0x00FF},	/* SAMP_PIX_PULLDOWN_EN_S */
{MT9P111_REG16, 0x3E90, 0x3C01},	/* RST_ADDR_EN */
{MT9P111_REG16, 0x3E92, 0x00FF},	/* RST_RST_EN */
{MT9P111_REG16, 0x3E94, 0x00FF},	/* RST_RST_BOOST */
{MT9P111_REG16, 0x3E96, 0x3C00},	/* RST_TX_EN */
{MT9P111_REG16, 0x3E98, 0x3C00},	/* RST_TX_BOOST */
{MT9P111_REG16, 0x3E9A, 0x3C00},	/* RST_TX_CLOOP_SH */
{MT9P111_REG16, 0x3E9C, 0xC0E0},	/* RST_TX_BOOST_SEQ */
{MT9P111_REG16, 0x3E9E, 0x00FF},	/* RST_RST_CLOOP_SH */
{MT9P111_REG16, 0x3EA0, 0x0000},	/* RST_RST_BOOST_SEQ */
{MT9P111_REG16, 0x3EA6, 0x3C00},	/* RST_PIX_PULLUP_EN */
{MT9P111_REG16, 0x3ED0, 0x2409},	/* DAC_LD_4_5 */
{MT9P111_REG16, 0x3ED2, 0xEA0A},	/* DAC_LD_6_7 */
{MT9P111_REG16, 0x3ED4, 0x00A3},	/* DAC_LD_8_9 */
{MT9P111_REG16, 0x3ED8, 0x3057},	/* DAC_LD_12_13 */
/* Fix green tint at cold start */
{MT9P111_REG16, 0x3EDA, 0x2020},	/* DAC_LD_14_15 */
{MT9P111_REG16, 0x3EDC, 0x6020},	/* DAC_LD_16_17 */
{MT9P111_REG16, 0x3EDE, 0x0A49},	/* DAC_LD_18_19 */
{MT9P111_REG16, 0x3EE0, 0x4910},	/* DAC_LD_20_21 */
{MT9P111_REG16, 0x3EE2, 0x09D2},	/* DAC_LD_22_23 */
{MT9P111_REG16, 0x3EE6, 0xA7C1},	/* DAC_LD_26_27 */
/* Data pedestal and fuse defect correction fixes */
{MT9P111_REG16, 0x301E, 0x00A8},	/* DATA_PEDESTAL_ */
{MT9P111_REG8, 0xDC33, 0x2A},		/* SYS_FIRST_BLACK_LEVEL = DATA_PEDESTAL_ / 4 */
/* OTPM comparator value */
{MT9P111_REG16, 0x3812, 0x212C},
/* Put MIPI interface into standby */
{MT9P111_REG16, 0x3400, 0x7A26},	/* MIPI_CONTROL */
{MT9P111_POLL16, 0x3402, 0x0001, 0x0001},
/* Setup MIPI timing for 768 MHz bit clock */
{MT9P111_REG16, 0x340A, 0x001F},	/* TXSS_MIPI_CONTROL_ADDL */
{MT9P111_REG16, 0x3410, 0x0F00},	/* MIPI_TIMING_T_HS_ZERO */
{MT9P111_REG16, 0x3412, 0x0B04},	/* MIPI_TIMING_T_HS_EXIT_HS_TRAIL */
{MT9P111_REG16, 0x3414, 0x0D01},	/* MIPI_TIMING_T_CLK_POST_CLK_PRE */
{MT9P111_REG16, 0x3416, 0x031D},	/* MIPI_T_CLK_TRAIL_CLK_ZERO */
{MT9P111_REG16, 0x3418, 0x0006},	/* MIPI_TIMING_T_LPX */
{MT9P111_REG16, 0x341A, 0x0A0C},	/* MIPI_INIT_TIMING */
{MT9P111_REG16, 0x3CA0, 0x0001},	/* TXSS_PARAMETERS */
{MT9P111_REG16, 0x3CA2, 0x0087},	/* TXC_PARAMETERS */
{MT9P111_REG16, 0x3CAA, 0x1010},	/* TXC_TIMING */
/* Take MIPI interface out of standby */
{MT9P111_REG16, 0x3400, 0x7A24},	/* MIPI_CONTROL */
{MT9P111_POLL16, 0x3402, 0x0000, 0x0001},
/* Fix MIPI variable settings */
{MT9P111_REG16, 0xC8D4, 0x0000},	/* CAM_OUTPUT_1_MIPI_CHANNEL */
{MT9P111_REG16, 0xD822, 0x4710},	/* JPEG_JPSS_CTRL_VAR */
/* Probe otpm with work around for race condition */
{MT9P111_REG16, 0xE002, 0x0000},	/* disable extended IO */
{MT9P111_REG16, 0xE02A, 0x0001},	/* set extended command, probe otpm */
{MT9P111_REG16, 0xE002, 0x0100},	/* reenable extended IO */
{MT9P111_POLL16, 0xE02A, 0x0000, 0xFFFF},
{MT9P111_REG16, 0x8016, 0xAA20},
{MT9P111_REG16, 0x8018, 0x0000},
{MT9P111_REG16, 0x8002, 0x0001},
/* Set variable access to physical mode */
{MT9P111_REG16, 0x0982, 0x0000},
{MT9P111_REG16, 0x098A, 0x0000},
{MT9P111_REG16, 0x886C, 0xC0F1},
{MT9P111_REG16, 0x886E, 0xC5E1},
{MT9P111_REG16, 0x8870, 0x246A},
{MT9P111_REG16, 0x8872, 0x1280},
{MT9P111_REG16, 0x8874, 0xC4E1},
{MT9P111_REG16, 0x8876, 0xD20F},
{MT9P111_REG16, 0x8878, 0x2069},
{MT9P111_REG16, 0x887A, 0x0000},
{MT9P111_REG16, 0x887C, 0x6A62},
{MT9P111_REG16, 0x887E, 0x1303},
{MT9P111_REG16, 0x8880, 0x0084},
{MT9P111_REG16, 0x8882, 0x1734},
{MT9P111_REG16, 0x8884, 0x7005},
{MT9P111_REG16, 0x8886, 0xD801},
{MT9P111_REG16, 0x8888, 0x8A41},
{MT9P111_REG16, 0x888A, 0xD900},
{MT9P111_REG16, 0x888C, 0x0D5A},
{MT9P111_REG16, 0x888E, 0x0664},
{MT9P111_REG16, 0x8890, 0x8B61},
{MT9P111_REG16, 0x8892, 0xE80B},
{MT9P111_REG16, 0x8894, 0x000D},
{MT9P111_REG16, 0x8896, 0x0020},
{MT9P111_REG16, 0x8898, 0xD508},
{MT9P111_REG16, 0x889A, 0x1504},
{MT9P111_REG16, 0x889C, 0x1400},
{MT9P111_REG16, 0x889E, 0x7840},
{MT9P111_REG16, 0x88A0, 0xD007},
{MT9P111_REG16, 0x88A2, 0x0DFB},
{MT9P111_REG16, 0x88A4, 0x9004},
{MT9P111_REG16, 0x88A6, 0xC4C1},
{MT9P111_REG16, 0x88A8, 0x2029},
{MT9P111_REG16, 0x88AA, 0x0300},
{MT9P111_REG16, 0x88AC, 0x0219},
{MT9P111_REG16, 0x88AE, 0x06C4},
{MT9P111_REG16, 0x88B0, 0xFF80},
{MT9P111_REG16, 0x88B2, 0x08C4},
{MT9P111_REG16, 0x88B4, 0xFF80},
{MT9P111_REG16, 0x88B6, 0x086C},
{MT9P111_REG16, 0x88B8, 0xFF80},
{MT9P111_REG16, 0x88BA, 0x08C0},
{MT9P111_REG16, 0x88BC, 0xFF80},
{MT9P111_REG16, 0x88BE, 0x08C4},
{MT9P111_REG16, 0x88C0, 0xFF80},
{MT9P111_REG16, 0x88C2, 0x097C},
{MT9P111_REG16, 0x88C4, 0x0001},
{MT9P111_REG16, 0x88C6, 0x0005},
{MT9P111_REG16, 0x88C8, 0x0000},
{MT9P111_REG16, 0x88CA, 0x0000},
{MT9P111_REG16, 0x88CC, 0xC0F1},
{MT9P111_REG16, 0x88CE, 0x0976},
{MT9P111_REG16, 0x88D0, 0x06C4},
{MT9P111_REG16, 0x88D2, 0xD639},
{MT9P111_REG16, 0x88D4, 0x7708},
{MT9P111_REG16, 0x88D6, 0x8E01},
{MT9P111_REG16, 0x88D8, 0x1604},
{MT9P111_REG16, 0x88DA, 0x1091},
{MT9P111_REG16, 0x88DC, 0x2046},
{MT9P111_REG16, 0x88DE, 0x00C1},
{MT9P111_REG16, 0x88E0, 0x202F},
{MT9P111_REG16, 0x88E2, 0x2047},
{MT9P111_REG16, 0x88E4, 0xAE21},
{MT9P111_REG16, 0x88E6, 0x0F8F},
{MT9P111_REG16, 0x88E8, 0x1440},
{MT9P111_REG16, 0x88EA, 0x8EAA},
{MT9P111_REG16, 0x88EC, 0x8E0B},
{MT9P111_REG16, 0x88EE, 0x224A},
{MT9P111_REG16, 0x88F0, 0x2040},
{MT9P111_REG16, 0x88F2, 0x8E2D},
{MT9P111_REG16, 0x88F4, 0xBD08},
{MT9P111_REG16, 0x88F6, 0x7D05},
{MT9P111_REG16, 0x88F8, 0x8E0C},
{MT9P111_REG16, 0x88FA, 0xB808},
{MT9P111_REG16, 0x88FC, 0x7825},
{MT9P111_REG16, 0x88FE, 0x7510},
{MT9P111_REG16, 0x8900, 0x22C2},
{MT9P111_REG16, 0x8902, 0x248C},
{MT9P111_REG16, 0x8904, 0x081D},
{MT9P111_REG16, 0x8906, 0x0363},
{MT9P111_REG16, 0x8908, 0xD9FF},
{MT9P111_REG16, 0x890A, 0x2502},
{MT9P111_REG16, 0x890C, 0x1002},
{MT9P111_REG16, 0x890E, 0x2A05},
{MT9P111_REG16, 0x8910, 0x03FE},
{MT9P111_REG16, 0x8912, 0x0A16},
{MT9P111_REG16, 0x8914, 0x06E4},
{MT9P111_REG16, 0x8916, 0x702F},
{MT9P111_REG16, 0x8918, 0x7810},
{MT9P111_REG16, 0x891A, 0x7D02},
{MT9P111_REG16, 0x891C, 0x7DB0},
{MT9P111_REG16, 0x891E, 0xF00B},
{MT9P111_REG16, 0x8920, 0x78A2},
{MT9P111_REG16, 0x8922, 0x2805},
{MT9P111_REG16, 0x8924, 0x03FE},
{MT9P111_REG16, 0x8926, 0x0A02},
{MT9P111_REG16, 0x8928, 0x06E4},
{MT9P111_REG16, 0x892A, 0x702F},
{MT9P111_REG16, 0x892C, 0x7810},
{MT9P111_REG16, 0x892E, 0x651D},
{MT9P111_REG16, 0x8930, 0x7DB0},
{MT9P111_REG16, 0x8932, 0x7DAF},
{MT9P111_REG16, 0x8934, 0x8E08},
{MT9P111_REG16, 0x8936, 0xBD06},
{MT9P111_REG16, 0x8938, 0xD120},
{MT9P111_REG16, 0x893A, 0xB8C3},
{MT9P111_REG16, 0x893C, 0x78A5},
{MT9P111_REG16, 0x893E, 0xB88F},
{MT9P111_REG16, 0x8940, 0x1908},
{MT9P111_REG16, 0x8942, 0x0024},
{MT9P111_REG16, 0x8944, 0x2841},
{MT9P111_REG16, 0x8946, 0x0201},
{MT9P111_REG16, 0x8948, 0x1E26},
{MT9P111_REG16, 0x894A, 0x1042},
{MT9P111_REG16, 0x894C, 0x0F15},
{MT9P111_REG16, 0x894E, 0x1463},
{MT9P111_REG16, 0x8950, 0x1E27},
{MT9P111_REG16, 0x8952, 0x1002},
{MT9P111_REG16, 0x8954, 0x224C},
{MT9P111_REG16, 0x8956, 0xA000},
{MT9P111_REG16, 0x8958, 0x224A},
{MT9P111_REG16, 0x895A, 0x2040},
{MT9P111_REG16, 0x895C, 0x22C2},
{MT9P111_REG16, 0x895E, 0x2482},
{MT9P111_REG16, 0x8960, 0x204F},
{MT9P111_REG16, 0x8962, 0x2040},
{MT9P111_REG16, 0x8964, 0x224C},
{MT9P111_REG16, 0x8966, 0xA000},
{MT9P111_REG16, 0x8968, 0xB8A2},
{MT9P111_REG16, 0x896A, 0xF204},
{MT9P111_REG16, 0x896C, 0x2045},
{MT9P111_REG16, 0x896E, 0x2180},
{MT9P111_REG16, 0x8970, 0xAE01},
{MT9P111_REG16, 0x8972, 0x0D9E},
{MT9P111_REG16, 0x8974, 0xFFE3},
{MT9P111_REG16, 0x8976, 0x70E9},
{MT9P111_REG16, 0x8978, 0x0125},
{MT9P111_REG16, 0x897A, 0x06C4},
{MT9P111_REG16, 0x897C, 0xC0F1},
{MT9P111_REG16, 0x897E, 0xD010},
{MT9P111_REG16, 0x8980, 0xD110},
{MT9P111_REG16, 0x8982, 0xD20D},
{MT9P111_REG16, 0x8984, 0xA020},
{MT9P111_REG16, 0x8986, 0x8A00},
{MT9P111_REG16, 0x8988, 0x0809},
{MT9P111_REG16, 0x898A, 0x01DE},
{MT9P111_REG16, 0x898C, 0xB8A7},
{MT9P111_REG16, 0x898E, 0xAA00},
{MT9P111_REG16, 0x8990, 0xDBFF},
{MT9P111_REG16, 0x8992, 0x2B41},
{MT9P111_REG16, 0x8994, 0x0200},
{MT9P111_REG16, 0x8996, 0xAA0C},
{MT9P111_REG16, 0x8998, 0x1228},
{MT9P111_REG16, 0x899A, 0x0080},
{MT9P111_REG16, 0x899C, 0xAA6D},
{MT9P111_REG16, 0x899E, 0x0815},
{MT9P111_REG16, 0x89A0, 0x01DE},
{MT9P111_REG16, 0x89A2, 0xB8A7},
{MT9P111_REG16, 0x89A4, 0x1A28},
{MT9P111_REG16, 0x89A6, 0x0002},
{MT9P111_REG16, 0x89A8, 0x8123},
{MT9P111_REG16, 0x89AA, 0x7960},
{MT9P111_REG16, 0x89AC, 0x1228},
{MT9P111_REG16, 0x89AE, 0x0080},
{MT9P111_REG16, 0x89B0, 0xC0D1},
{MT9P111_REG16, 0x89B2, 0x7EE0},
{MT9P111_REG16, 0x89B4, 0xFF80},
{MT9P111_REG16, 0x89B6, 0x0158},
{MT9P111_REG16, 0x89B8, 0xFF00},
{MT9P111_REG16, 0x89BA, 0x0618},
{MT9P111_REG16, 0x89BC, 0x8000},
{MT9P111_REG16, 0x89BE, 0x0008},
{MT9P111_REG16, 0x89C0, 0xFF80},
{MT9P111_REG16, 0x89C2, 0x0A08},
{MT9P111_REG16, 0x89C4, 0xE280},
{MT9P111_REG16, 0x89C6, 0x24CA},
{MT9P111_REG16, 0x89C8, 0x7082},
{MT9P111_REG16, 0x89CA, 0x78E0},
{MT9P111_REG16, 0x89CC, 0x20E8},
{MT9P111_REG16, 0x89CE, 0x01A2},
{MT9P111_REG16, 0x89D0, 0x1002},
{MT9P111_REG16, 0x89D2, 0x0D02},
{MT9P111_REG16, 0x89D4, 0x1902},
{MT9P111_REG16, 0x89D6, 0x0094},
{MT9P111_REG16, 0x89D8, 0x7FE0},
{MT9P111_REG16, 0x89DA, 0x7028},
{MT9P111_REG16, 0x89DC, 0x7308},
{MT9P111_REG16, 0x89DE, 0x1000},
{MT9P111_REG16, 0x89E0, 0x0900},
{MT9P111_REG16, 0x89E2, 0x7904},
{MT9P111_REG16, 0x89E4, 0x7947},
{MT9P111_REG16, 0x89E6, 0x1B00},
{MT9P111_REG16, 0x89E8, 0x0064},
{MT9P111_REG16, 0x89EA, 0x7EE0},
{MT9P111_REG16, 0x89EC, 0xE280},
{MT9P111_REG16, 0x89EE, 0x24CA},
{MT9P111_REG16, 0x89F0, 0x7082},
{MT9P111_REG16, 0x89F2, 0x78E0},
{MT9P111_REG16, 0x89F4, 0x20E8},
{MT9P111_REG16, 0x89F6, 0x01A2},
{MT9P111_REG16, 0x89F8, 0x1102},
{MT9P111_REG16, 0x89FA, 0x0502},
{MT9P111_REG16, 0x89FC, 0x1802},
{MT9P111_REG16, 0x89FE, 0x00B4},
{MT9P111_REG16, 0x8A00, 0x7FE0},
{MT9P111_REG16, 0x8A02, 0x7028},
{MT9P111_REG16, 0x8A04, 0x0000},
{MT9P111_REG16, 0x8A06, 0x0000},
{MT9P111_REG16, 0x8A08, 0xFF80},
{MT9P111_REG16, 0x8A0A, 0x097C},
{MT9P111_REG16, 0x8A0C, 0xFF80},
{MT9P111_REG16, 0x8A0E, 0x08CC},
{MT9P111_REG16, 0x8A10, 0x0000},
{MT9P111_REG16, 0x8A12, 0x08DC},
{MT9P111_REG16, 0x8A14, 0x0000},
{MT9P111_REG16, 0x8A16, 0x0998},
/* Return variable access to logical mode */
{MT9P111_REG16, 0x098E, 0x0000},
/* Patch-specific defaults that need to changed */
{MT9P111_REG16, 0xC40C, 0x00FF},	/* AFM_POS_MAX */
{MT9P111_REG16, 0xC40A, 0x0000},	/* AFM_POS_MIN */
/* Wait for PGA load to complete */
{MT9P111_POLL16, 0x8002, 0x0000, 0xFFFF},
/* Execute patch */
{MT9P111_REG16, 0x8016, 0x086C},
{MT9P111_REG16, 0x8018, 0xFF80},
{MT9P111_REG16, 0x8002, 0x0001},
{MT9P111_POLL16, 0x8002, 0x0000, 0xFFFF},
/* Preview at 1280x968 YCbCr 30fps, capture at 2592x1944 YCbCr 7.5fps */
{MT9P111_REG16, 0x098E, 0x1000},
{MT9P111_REG16, 0xC86C, 0x0518},	/* Output Width (A) = 1304 */
{MT9P111_REG16, 0xC86E, 0x03D4},	/* Output Height (A) = 980 */
{MT9P111_REG16, 0xC83A, 0x000C},	/* Row Start (A) = 12 */
{MT9P111_REG16, 0xC83C, 0x0018},	/* Column Start (A) = 24 */
{MT9P111_REG16, 0xC83E, 0x07B1},	/* Row End (A) = 1969 */
{MT9P111_REG16, 0xC840, 0x0A45},	/* Column End (A) = 2629 */
{MT9P111_REG16, 0xC842, 0x0001},	/* Row Speed (A) = 1 */
{MT9P111_REG16, 0xC844, 0x0103},	/* Core Skip X (A) = 259 */
{MT9P111_REG16, 0xC846, 0x0103},	/* Core Skip Y (A) = 259 */
{MT9P111_REG16, 0xC848, 0x0103},	/* Pipe Skip X (A) = 259 */
{MT9P111_REG16, 0xC84A, 0x0103},	/* Pipe Skip Y (A) = 259 */
{MT9P111_REG16, 0xC84C, 0x00F6},	/* Power Mode (A) = 246 */
{MT9P111_REG16, 0xC84E, 0x0001},	/* Bin Mode (A) = 1 */
#ifdef CONFIG_MACH_AVALON
{MT9P111_REG8, 0xC850, 0x03},		/* Orientation (A) = 3 */
{MT9P111_REG8, 0xC851, 0x03},		/* Pixel Order (A) = 3 */
#else
{MT9P111_REG8, 0xC850, 0x00},		/* Orientation (A) = 0 */
{MT9P111_REG8, 0xC851, 0x00},		/* Pixel Order (A) = 0 */
#endif
/* Fixed CFPN */
{MT9P111_REG16, 0xC852, 0x0060},	/* Fine Correction (A) = 412 */
{MT9P111_REG16, 0xC854, 0x0732},	/* Fine IT Min (A) = 1842 */
{MT9P111_REG16, 0xC856, 0x048E},	/* Fine IT Max Margin (A) = 1166 */
{MT9P111_REG16, 0xC858, 0x0002},	/* Coarse IT Min (A) = 2 */
{MT9P111_REG16, 0xC85A, 0x0001},	/* Coarse IT Max Margin (A) = 1 */
{MT9P111_REG16, 0xC85C, 0x0436},	/* Min Frame Lines (A) = 1078 */
{MT9P111_REG16, 0xC85E, 0xFFFF},	/* Max Frame Lines (A) = 65535 */
{MT9P111_REG16, 0xC860, 0x0423},	/* Base Frame Lines (A) = 1059 */
{MT9P111_REG16, 0xC862, 0x0E87},	/* Min Line Length (A) = 3719 */
{MT9P111_REG16, 0xC864, 0xFFFE},	/* Max Line Length (A) = 65534 */
/* Fix pixel noise */
{MT9P111_REG16, 0xC866, 0x7F7C},	/* P456 Divider (A) = 32636 */
{MT9P111_REG16, 0xC868, 0x0423},	/* Frame Lines (A) = 1059 */
{MT9P111_REG16, 0xC86A, 0x0E87},	/* Line Length (A) = 3719 */
{MT9P111_REG16, 0xC870, 0x0014},	/* RX FIFO Watermark (A) = 20 */
{MT9P111_REG16, 0xC8AA, 0x0500},	/* Output_0 Image Width = 1280 */
{MT9P111_REG16, 0xC8AC, 0x03C0},	/* Output_0 Image Height = 960 */
{MT9P111_REG16, 0xC8AE, 0x0001},	/* Output_0 Image Format = 1 */
{MT9P111_REG16, 0xC8B0, 0x0000},	/* Output_0 Format Order = 0 */
{MT9P111_REG16, 0xC8B8, 0x0004},	/* Output_0 JPEG control = 4 */
{MT9P111_REG16, 0xC8A4, 0x0A28},	/* Output Width (B) = 2600 */
{MT9P111_REG16, 0xC8A6, 0x07A0},	/* Output Height (B) = 1952 */
{MT9P111_REG16, 0xC872, 0x0010},	/* Row Start (B) = 16 */
{MT9P111_REG16, 0xC874, 0x001C},	/* Column Start (B) = 28 */
{MT9P111_REG16, 0xC876, 0x07AF},	/* Row End (B) = 1967 */
{MT9P111_REG16, 0xC878, 0x0A43},	/* Column End (B) = 2627 */
{MT9P111_REG16, 0xC87A, 0x0001},	/* Row Speed (B) = 1 */
{MT9P111_REG16, 0xC87C, 0x0101},	/* Core Skip X (B) = 257 */
{MT9P111_REG16, 0xC87E, 0x0101},	/* Core Skip Y (B) = 257 */
{MT9P111_REG16, 0xC880, 0x0101},	/* Pipe Skip X (B) = 257 */
{MT9P111_REG16, 0xC882, 0x0101},	/* Pipe Skip Y (B) = 257 */
{MT9P111_REG16, 0xC884, 0x00F2},	/* Power Mode (B) = 242 */
{MT9P111_REG16, 0xC886, 0x0000},	/* Bin Mode (B) = 0 */
#ifdef CONFIG_MACH_AVALON
{MT9P111_REG8, 0xC888, 0x03},		/* Orientation (B) = 3 */
{MT9P111_REG8, 0xC889, 0x03},		/* Pixel Order (B) = 3 */
#else
{MT9P111_REG8, 0xC888, 0x00},		/* Orientation (B) = 0 */
{MT9P111_REG8, 0xC889, 0x00},		/* Pixel Order (B) = 0 */
#endif
{MT9P111_REG16, 0xC88A, 0x009C},	/* Fine Correction (B) = 156 */
{MT9P111_REG16, 0xC88C, 0x034A},	/* Fine IT Min (B) = 842 */
{MT9P111_REG16, 0xC88E, 0x02A6},	/* Fine IT Max Margin (B) = 678 */
{MT9P111_REG16, 0xC890, 0x0002},	/* Coarse IT Min (B) = 2 */
{MT9P111_REG16, 0xC892, 0x0001},	/* Coarse IT Max Margin (B) = 1 */
{MT9P111_REG16, 0xC894, 0x07EF},	/* Min Frame Lines (B) = 2031 */
{MT9P111_REG16, 0xC896, 0xFFFF},	/* Max Frame Lines (B) = 65535 */
{MT9P111_REG16, 0xC898, 0x07EF},	/* Base Frame Lines (B) = 2031 */
{MT9P111_REG16, 0xC89A, 0x1E4C},	/* Min Line Length (B) = 7756 */
{MT9P111_REG16, 0xC89C, 0xFFFE},	/* Max Line Length (B) = 65534 */
/* Fix pixel noise */
{MT9P111_REG16, 0xC89E, 0x7F7C},	/* P456 Divider (B) = 32636 */
{MT9P111_REG16, 0xC8A0, 0x07EF},	/* Frame Lines (B) = 2031 */
{MT9P111_REG16, 0xC8A2, 0x1E4C},	/* Line Length (B) = 7756 */
{MT9P111_REG16, 0xC8A8, 0x0014},	/* RX FIFO Watermark (B) = 20 */
{MT9P111_REG16, 0xC8C0, 0x0A20},	/* Output_1 Image Width = 2592 */
{MT9P111_REG16, 0xC8C2, 0x0798},	/* Output_1 Image Height = 1944 */
{MT9P111_REG16, 0xC8C4, 0x0001},	/* Output_1 Image Format = 1 */
{MT9P111_REG16, 0xC8C6, 0x0000},	/* Output_1 Format Order = 0 */
{MT9P111_REG16, 0xC8CE, 0x0004},	/* Output_1 JPEG control = 4 */
{MT9P111_REG16, 0xA010, 0x0134},	/* fd_min_expected50hz_flicker_period = 308 */
{MT9P111_REG16, 0xA012, 0x0148},	/* fd_max_expected50hz_flicker_period = 328 */
{MT9P111_REG16, 0xA014, 0x00FF},	/* fd_min_expected60hz_flicker_period = 255 */
{MT9P111_REG16, 0xA016, 0x0113},	/* fd_max_expected60hz_flicker_period = 275 */
{MT9P111_REG16, 0xA018, 0x013E},	/* fd_expected50hz_flicker_period (A) = 318 */
{MT9P111_REG16, 0xA01A, 0x0098},	/* fd_expected50hz_flicker_period (B) = 152 */
{MT9P111_REG16, 0xA01C, 0x0109},	/* fd_expected60hz_flicker_period (A) = 265 */
{MT9P111_REG16, 0xA01E, 0x007F},	/* fd_expected60hz_flicker_period (B) = 127 */
{MT9P111_REG8, 0xDC0A, 0x06},		/* Scaler Allow Zoom Ratio = 6 */
{MT9P111_REG16, 0xDC1C, 0x2710},	/* System Zoom Ratio = 10000 */
{MT9P111_REG8, 0x8417, 0x04},		/* SEQ_STATE_CFG_1_FD */
{MT9P111_REG8, 0xB82F, 0x04},		/* STAT_FD_SMOOTHING_FILTER_SIZE */
{MT9P111_REG16, 0x3802, 0x0000},	/* OTPM_CONTROL */
{MT9P111_REG16, 0x3804, 0x0000},	/* OTPM_ADDR */
{MT9P111_REG16, 0x3802, 0x0009},	/* OTPM_CONTROL -- Read data from address 0x0000, OTPM_ADDR will increase by 1 automatically */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg mode_init_end[] = {
{MT9P111_REG8, 0xD005, 0x00},		/* PGA_CURRENT_ZONE -- Specify PGA Zone to 0~2 */
/* Set up APGA parameter according to the AWB result */
{MT9P111_REG8, 0xD00C, 0x03},		/* PGA_NO_OF_ZONES */
/*
 * For APGA and related to "AWB_CURRENT_CCM_POSITION", user may need to fine
 * tune according to the AWB parameter settings
 */
{MT9P111_REG8, 0xD00D, 0x00},		/* PGA_ZONE_LOW_0 -- low limit for low CT condition, i.e. A-light */
{MT9P111_REG8, 0xD00E, 0x07},		/* PGA_ZONE_LOW_1 -- low limit for middle CT condition, i.e. CWF or TL84 */
{MT9P111_REG8, 0xD00F, 0x64},		/* PGA_ZONE_LOW_2 -- low limit for higher CT condition */
{MT9P111_REG8, 0xD011, 0x06},		/* PGA_ZONE_HIGH_0 -- high limit for low CT condition, i.e. A-light */
{MT9P111_REG8, 0xD012, 0x63},		/* PGA_ZONE_HIGH_1 -- high limit for middle CT condition */
{MT9P111_REG8, 0xD013, 0x7F},		/* PGA_ZONE_HIGH_2 -- high limit for higher CT condition, i.e. D65 or DNP */
{MT9P111_REG16, 0xD002, 0x8007},	/* PGA_ALGO */
/* AWB setup */
/* CCM */
/* Modified CCM table */
{MT9P111_REG16, 0x098E, 0x2C46},	/* LOGICAL_ADDRESS_ACCESS [AWB_LEFT_CCM_0] */
/* A Light CCM & R/G B/g ratios */
{MT9P111_REG16, 0xAC46, 0x0218},	/* AWB_LEFT_CCM_0 */
{MT9P111_REG16, 0xAC48, 0xFEA3},	/* AWB_LEFT_CCM_1 */
{MT9P111_REG16, 0xAC4A, 0xFFA8},	/* AWB_LEFT_CCM_2 */
{MT9P111_REG16, 0xAC4C, 0xFFA2},	/* AWB_LEFT_CCM_3 */
{MT9P111_REG16, 0xAC4E, 0x0173},	/* AWB_LEFT_CCM_4 */
{MT9P111_REG16, 0xAC50, 0xFFA5},	/* AWB_LEFT_CCM_5 */
{MT9P111_REG16, 0xAC52, 0xFFE2},	/* AWB_LEFT_CCM_6 */
{MT9P111_REG16, 0xAC54, 0xFD55},	/* AWB_LEFT_CCM_7 */
{MT9P111_REG16, 0xAC56, 0x03F1},	/* AWB_LEFT_CCM_8 */
{MT9P111_REG16, 0xAC58, 0x00C6},	/* AWB_LEFT_CCM_R2BRATIO */
/* D65 Light CCM */
{MT9P111_REG16, 0xAC5C, 0x02D0},	/* AWB_RIGHT_CCM_0 */
{MT9P111_REG16, 0xAC5E, 0xFDFC},	/* AWB_RIGHT_CCM_1 */
{MT9P111_REG16, 0xAC60, 0xFFEE},	/* AWB_RIGHT_CCM_2 */
{MT9P111_REG16, 0xAC62, 0xFF7B},	/* AWB_RIGHT_CCM_3 */
{MT9P111_REG16, 0xAC64, 0x01A2},	/* AWB_RIGHT_CCM_4 */
{MT9P111_REG16, 0xAC66, 0xFFD0},	/* AWB_RIGHT_CCM_5 */
{MT9P111_REG16, 0xAC68, 0x0005},	/* AWB_RIGHT_CCM_6 */
{MT9P111_REG16, 0xAC6A, 0xFE9F},	/* AWB_RIGHT_CCM_7 */
{MT9P111_REG16, 0xAC6C, 0x0282},	/* AWB_RIGHT_CCM_8 */
{MT9P111_REG16, 0xAC6E, 0x0069},	/* AWB_RIGHT_CCM_R2BRATIO */
/* AWB parameters */
/* Modified gray_offset_x and gray_offset_y for improve Pegatron's office CT condition */
{MT9P111_REG16, 0xB842, 0x0038},	/* STAT_AWB_GRAY_CHECKER_OFFSET_X */
{MT9P111_REG16, 0xB844, 0x0034},	/* STAT_AWB_GRAY_CHECKER_OFFSET_Y */
{MT9P111_REG16, 0x3240, 0x0024},	/* AWB_XY_SCALE */
{MT9P111_REG16, 0x3242, 0x0000},	/* AWB_WEIGHT_R0 */
{MT9P111_REG16, 0x3244, 0x1550},	/* AWB_WEIGHT_R1 */
{MT9P111_REG16, 0x3246, 0x1F00},	/* AWB_WEIGHT_R2 */
{MT9P111_REG16, 0x3248, 0x7380},	/* AWB_WEIGHT_R3 */
{MT9P111_REG16, 0x324A, 0x70E0},	/* AWB_WEIGHT_R4 */
{MT9P111_REG16, 0x324C, 0x01F0},	/* AWB_WEIGHT_R5 */
{MT9P111_REG16, 0x324E, 0x006B},	/* AWB_WEIGHT_R6 */
{MT9P111_REG16, 0x3250, 0x0055},	/* AWB_WEIGHT_R7 */
/* Pre AWB ratios */
{MT9P111_REG8, 0xAC3C, 0x39},		/* AWB_MIN_ACCEPTED_PRE_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC3D, 0x6E},		/* AWB_MAX_ACCEPTED_PRE_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC3E, 0x28},		/* AWB_MIN_ACCEPTED_PRE_AWB_B2G_RATIO */
{MT9P111_REG8, 0xAC3F, 0x6B},		/* AWB_MAX_ACCEPTED_PRE_AWB_B2G_RATIO */
/* Post AWB ratios */
{MT9P111_REG8, 0xAC40, 0x64},		/* AWB_MIN_ACCEPTED_POST_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC41, 0x66},		/* AWB_MAX_ACCEPTED_POST_AWB_R2G_RATIO */
{MT9P111_REG8, 0xAC42, 0x64},		/* AWB_MIN_ACCEPTED_POST_AWB_B2G_RATIO */
{MT9P111_REG8, 0xAC43, 0x66},		/* AWB_MAX_ACCEPTED_POST_AWB_B2G_RATIO */
/* New patch uses thes instead when awb bright patch is enabled */
{MT9P111_REG8, 0xACB0, 0x31},		/* AWB_RG_MIN */
{MT9P111_REG8, 0xACB1, 0x5F},		/* AWB_RG_MAX */
{MT9P111_REG8, 0xACB4, 0x22},		/* AWB_BG_MIN */
{MT9P111_REG8, 0xACB5, 0x5B},		/* AWB_BG_MAX */
/* AWB limit bright tight */
/* Still need to tune this outdoors */
{MT9P111_REG16, 0xAC02, 0x00FF},	/* AWB_ALGO */
{MT9P111_REG8, 0xAC01, 0xAB},		/* AWB_MODE */
{MT9P111_REG8, 0xACB2, 0x38},		/* AWB_RG_MIN_BRIGHT */
{MT9P111_REG8, 0xACB3, 0x48},		/* AWB_RG_MAX_BRIGHT */
{MT9P111_REG8, 0xACB6, 0x38},		/* AWB_BG_MIN_BRIGHT */
{MT9P111_REG8, 0xACB7, 0x48},		/* AWB_BG_MAX_BRIGHT */
{MT9P111_REG16, 0xACB8, 0x00D0},	/* AWB_START_NUM_INT_LINES */
{MT9P111_REG16, 0xACBA, 0x0090},	/* AWB_END_NUM_INT_LINES */
{MT9P111_REG8, 0xAC09, 0x01},		/* AWB_UNUSED1 */
{MT9P111_REG16, 0xAC22, 0x0000},	/* AWB_UNUSED2 */
{MT9P111_REG8, 0xAC97, 0x73},		/* AWB_LEFT_TINT_COEF_FOR_CCM_ROW_0 */
{MT9P111_REG8, 0xAC99, 0x8A},		/* AWB_LEFT_TINT_COEF_FOR_CCM_ROW_2 */
{MT9P111_REG8, 0xB83E, 0x00},		/* STAT_AWB_WINDOW_POS_X */
{MT9P111_REG8, 0xB83F, 0x00},		/* STAT_AWB_WINDOW_POS_Y */
{MT9P111_REG8, 0xB840, 0xFF},		/* STAT_AWB_WINDOW_SIZE_X */
{MT9P111_REG8, 0xB841, 0xEF},		/* STAT_AWB_WINDOW_SIZE_Y */
/* JPEG setup */
/* Sets minimum compression */
{MT9P111_REG8, 0xD80F, 0x04},		/* JPEG_QSCALE_0 */
{MT9P111_REG8, 0xD810, 0x08},		/* JPEG_QSCALE_1 */
{MT9P111_REG8, 0xC8D2, 0x04},		/* CAM_OUTPUT_1_JPEG_QSCALE_0 */
{MT9P111_REG8, 0xC8D3, 0x08},		/* CAM_OUTPUT_1_JPEG_QSCALE_1 */
{MT9P111_REG8, 0xC8BC, 0x04},		/* CAM_OUTPUT_0_JPEG_QSCALE_0 */
{MT9P111_REG8, 0xC8BD, 0x08},		/* CAM_OUTPUT_0_JPEG_QSCALE_1 */
/* SYS settings */
{MT9P111_REG16, 0x326E, 0x0006},	/* LOW_PASS_YUV_FILTER */
{MT9P111_REG16, 0x35A2, 0x0094},	/* DARK_COLOR_KILL_CONTROLS */
{MT9P111_REG16, 0x35A4, 0x0596},	/* BRIGHT_COLOR_KILL_CONTROLS */
{MT9P111_REG8, 0xDC35, 0x04},		/* SYS_UV_COLOR_BOOST */
{MT9P111_REG8, 0xDC36, 0x23},		/* SYS_DARK_COLOR_KILL */
{MT9P111_REG8, 0xDC37, 0x62},		/* SYS_BRIGHT_COLORKILL */
/* Gamma Curves REV3 */
{MT9P111_REG8, 0xBC18, 0x00},		/* LL_GAMMA_CONTRAST_CURVE_0 */
{MT9P111_REG8, 0xBC19, 0x11},		/* LL_GAMMA_CONTRAST_CURVE_1 */
{MT9P111_REG8, 0xBC1A, 0x23},		/* LL_GAMMA_CONTRAST_CURVE_2 */
{MT9P111_REG8, 0xBC1B, 0x3F},		/* LL_GAMMA_CONTRAST_CURVE_3 */
{MT9P111_REG8, 0xBC1C, 0x67},		/* LL_GAMMA_CONTRAST_CURVE_4 */
{MT9P111_REG8, 0xBC1D, 0x85},		/* LL_GAMMA_CONTRAST_CURVE_5 */
{MT9P111_REG8, 0xBC1E, 0x9B},		/* LL_GAMMA_CONTRAST_CURVE_6 */
{MT9P111_REG8, 0xBC1F, 0xAD},		/* LL_GAMMA_CONTRAST_CURVE_7 */
{MT9P111_REG8, 0xBC20, 0xBB},		/* LL_GAMMA_CONTRAST_CURVE_8 */
{MT9P111_REG8, 0xBC21, 0xC7},		/* LL_GAMMA_CONTRAST_CURVE_9 */
{MT9P111_REG8, 0xBC22, 0xD1},		/* LL_GAMMA_CONTRAST_CURVE_10 */
{MT9P111_REG8, 0xBC23, 0xDA},		/* LL_GAMMA_CONTRAST_CURVE_11 */
{MT9P111_REG8, 0xBC24, 0xE1},		/* LL_GAMMA_CONTRAST_CURVE_12 */
{MT9P111_REG8, 0xBC25, 0xE8},		/* LL_GAMMA_CONTRAST_CURVE_13 */
{MT9P111_REG8, 0xBC26, 0xEE},		/* LL_GAMMA_CONTRAST_CURVE_14 */
{MT9P111_REG8, 0xBC27, 0xF3},		/* LL_GAMMA_CONTRAST_CURVE_15 */
{MT9P111_REG8, 0xBC28, 0xF7},		/* LL_GAMMA_CONTRAST_CURVE_16 */
{MT9P111_REG8, 0xBC29, 0xFB},		/* LL_GAMMA_CONTRAST_CURVE_17 */
{MT9P111_REG8, 0xBC2A, 0xFF},		/* LL_GAMMA_CONTRAST_CURVE_18 */
{MT9P111_REG8, 0xBC2B, 0x00},		/* LL_GAMMA_NEUTRAL_CURVE_0 */
{MT9P111_REG8, 0xBC2C, 0x11},		/* LL_GAMMA_NEUTRAL_CURVE_1 */
{MT9P111_REG8, 0xBC2D, 0x23},		/* LL_GAMMA_NEUTRAL_CURVE_2 */
{MT9P111_REG8, 0xBC2E, 0x3F},		/* LL_GAMMA_NEUTRAL_CURVE_3 */
{MT9P111_REG8, 0xBC2F, 0x67},		/* LL_GAMMA_NEUTRAL_CURVE_4 */
{MT9P111_REG8, 0xBC30, 0x85},		/* LL_GAMMA_NEUTRAL_CURVE_5 */
{MT9P111_REG8, 0xBC31, 0x9B},		/* LL_GAMMA_NEUTRAL_CURVE_6 */
{MT9P111_REG8, 0xBC32, 0xAD},		/* LL_GAMMA_NEUTRAL_CURVE_7 */
{MT9P111_REG8, 0xBC33, 0xBB},		/* LL_GAMMA_NEUTRAL_CURVE_8 */
{MT9P111_REG8, 0xBC34, 0xC7},		/* LL_GAMMA_NEUTRAL_CURVE_9 */
{MT9P111_REG8, 0xBC35, 0xD1},		/* LL_GAMMA_NEUTRAL_CURVE_10 */
{MT9P111_REG8, 0xBC36, 0xDA},		/* LL_GAMMA_NEUTRAL_CURVE_11 */
{MT9P111_REG8, 0xBC37, 0xE1},		/* LL_GAMMA_NEUTRAL_CURVE_12 */
{MT9P111_REG8, 0xBC38, 0xE8},		/* LL_GAMMA_NEUTRAL_CURVE_13 */
{MT9P111_REG8, 0xBC39, 0xEE},		/* LL_GAMMA_NEUTRAL_CURVE_14 */
{MT9P111_REG8, 0xBC3A, 0xF3},		/* LL_GAMMA_NEUTRAL_CURVE_15 */
{MT9P111_REG8, 0xBC3B, 0xF7},		/* LL_GAMMA_NEUTRAL_CURVE_16 */
{MT9P111_REG8, 0xBC3C, 0xFB},		/* LL_GAMMA_NEUTRAL_CURVE_17 */
{MT9P111_REG8, 0xBC3D, 0xFF},		/* LL_GAMMA_NEUTRAL_CURVE_18 */
{MT9P111_REG8, 0xBC3E, 0x00},		/* LL_GAMMA_NR_CURVE_0 */
{MT9P111_REG8, 0xBC3F, 0x18},		/* LL_GAMMA_NR_CURVE_1 */
{MT9P111_REG8, 0xBC40, 0x25},		/* LL_GAMMA_NR_CURVE_2 */
{MT9P111_REG8, 0xBC41, 0x3A},		/* LL_GAMMA_NR_CURVE_3 */
{MT9P111_REG8, 0xBC42, 0x59},		/* LL_GAMMA_NR_CURVE_4 */
{MT9P111_REG8, 0xBC43, 0x70},		/* LL_GAMMA_NR_CURVE_5 */
{MT9P111_REG8, 0xBC44, 0x81},		/* LL_GAMMA_NR_CURVE_6 */
{MT9P111_REG8, 0xBC45, 0x90},		/* LL_GAMMA_NR_CURVE_7 */
{MT9P111_REG8, 0xBC46, 0x9E},		/* LL_GAMMA_NR_CURVE_8 */
{MT9P111_REG8, 0xBC47, 0xAB},		/* LL_GAMMA_NR_CURVE_9 */
{MT9P111_REG8, 0xBC48, 0xB6},		/* LL_GAMMA_NR_CURVE_10 */
{MT9P111_REG8, 0xBC49, 0xC1},		/* LL_GAMMA_NR_CURVE_11 */
{MT9P111_REG8, 0xBC4A, 0xCB},		/* LL_GAMMA_NR_CURVE_12 */
{MT9P111_REG8, 0xBC4B, 0xD5},		/* LL_GAMMA_NR_CURVE_13 */
{MT9P111_REG8, 0xBC4C, 0xDE},		/* LL_GAMMA_NR_CURVE_14 */
{MT9P111_REG8, 0xBC4D, 0xE7},		/* LL_GAMMA_NR_CURVE_15 */
{MT9P111_REG8, 0xBC4E, 0xEF},		/* LL_GAMMA_NR_CURVE_16 */
{MT9P111_REG8, 0xBC4F, 0xF7},		/* LL_GAMMA_NR_CURVE_17 */
{MT9P111_REG8, 0xBC50, 0xFF},		/* LL_GAMMA_NR_CURVE_18 */
/* BM dampening */
{MT9P111_REG8, 0xB801, 0xE0},		/* STAT_MODE */
{MT9P111_REG8, 0xB862, 0x04},		/* STAT_BMTRACKING_SPEED */
/* AE */
{MT9P111_REG8, 0xB863, 0x02},		/* STAT_BM_MUL */
{MT9P111_REG8, 0xB829, 0x02},		/* STAT_LL_BRIGHTNESS_METRIC_DIVISOR */
{MT9P111_REG8, 0xB827, 0x0F},		/* STAT_AE_EV_SHIFT */
{MT9P111_REG8, 0xB820, 0x26},		/* STAT_AE_WINDOW_POS_X */
{MT9P111_REG8, 0xB821, 0x26},		/* STAT_AE_WINDOW_POS_Y */
{MT9P111_REG8, 0xB822, 0xB5},		/* STAT_AE_WINDOW_SIZE_X */
{MT9P111_REG8, 0xB823, 0xB5},		/* STAT_AE_WINDOW_SIZE_Y */
{MT9P111_REG16, 0xA802, 0x0007},	/* AE_TRACK_ALGO */
{MT9P111_REG8, 0xA80E, 0x08},		/* AE_TRACK_MAX_BLACK_LEVEL */
{MT9P111_REG8, 0xA409, 0x37},		/* AE_RULE_BASE_TARGET -- for reading to 130/255 */
{MT9P111_REG8, 0xA805, 0x04},		/* AE_TRACK_GATE */
{MT9P111_REG8, 0xA807, 0x03},		/* AE_TRACK_JUMP_DIVISOR */
{MT9P111_REG16, 0xA818, 0x0298},	/* AE_TRACK_TARGET_INT_TIME_ROWS */
{MT9P111_REG16, 0xA81A, 0x0FEA},	/* AE_TRACK_MAX_INT_TIME_ROWS */
{MT9P111_REG8, 0xA401, 0x04},		/* AE_RULE_MODE */
/* BM GM Start Stop */
{MT9P111_REG16, 0xBC52, 0x00C8},	/* LL_START_BRIGHTNESS_METRIC */
{MT9P111_REG16, 0xBC54, 0x0A28},	/* LL_END_BRIGHTNESS_METRIC */
{MT9P111_REG16, 0xBC58, 0x00C8},	/* LL_START_GAIN_METRIC */
{MT9P111_REG16, 0xBC5A, 0x12C0},	/* LL_END_GAIN_METRIC */
{MT9P111_REG16, 0xBC5E, 0x00FA},	/* LL_START_APERTURE_GAIN_BM */
{MT9P111_REG16, 0xBC60, 0x0258},	/* LL_END_APERTURE_GAIN_BM */
{MT9P111_REG16, 0xBC66, 0x00FA},	/* LL_START_APERTURE_GM */
{MT9P111_REG16, 0xBC68, 0x0258},	/* LL_END_APERTURE_GM */
{MT9P111_REG16, 0xBC86, 0x00C8},	/* LL_START_FFNR_GM */
{MT9P111_REG16, 0xBC88, 0x0640},	/* LL_END_FFNR_GM */
{MT9P111_REG16, 0xBCBC, 0x0040},	/* LL_SFFB_START_GAIN */
{MT9P111_REG16, 0xBCBE, 0x01FC},	/* LL_SFFB_END_GAIN */
{MT9P111_REG16, 0xBCCC, 0x00C8},	/* LL_SFFB_START_MAX_GM */
{MT9P111_REG16, 0xBCCE, 0x0640},	/* LL_SFFB_END_MAX_GM */
{MT9P111_REG16, 0xBC90, 0x00C8},	/* LL_START_GRB_GM */
{MT9P111_REG16, 0xBC92, 0x0640},	/* LL_END_GRB_GM */
{MT9P111_REG16, 0xBC0E, 0x0001},	/* LL_GAMMA_CURVE_ADJ_START_POS */
{MT9P111_REG16, 0xBC10, 0x0002},	/* LL_GAMMA_CURVE_ADJ_MID_POS */
{MT9P111_REG16, 0xBC12, 0x0ED8},	/* LL_GAMMA_CURVE_ADJ_END_POS */
{MT9P111_REG16, 0xBCAA, 0x044C},	/* LL_CDC_THR_ADJ_START_POS */
{MT9P111_REG16, 0xBCAC, 0x00AF},	/* LL_CDC_THR_ADJ_MID_POS */
{MT9P111_REG16, 0xBCAE, 0x0009},	/* LL_CDC_THR_ADJ_END_POS */
{MT9P111_REG16, 0xBCD8, 0x00C8},	/* LL_PCR_START_BM */
{MT9P111_REG16, 0xBCDA, 0x0A28},	/* LL_PCR_END_BM */
/*
 * This tuning is based on the noise model. only change if new noise model has
 * been completed. Turns off single pixel, enables 1.5 cluster, disables fuse
 */
{MT9P111_REG16, 0x3380, 0x0587},	/* KERNEL_CONFIG */
/* CDC */
{MT9P111_REG8, 0xBCB2, 0x20},		/* LL_CDC_DARK_CLUS_SLOPE */
{MT9P111_REG8, 0xBCB3, 0x3A},		/* LL_CDC_DARK_CLUS_SATUR */
{MT9P111_REG8, 0xBCB4, 0x39},		/* LL_CDC_BRIGHT_CLUS_LO_LIGHT_SLOPE */
{MT9P111_REG8, 0xBCB5, 0x20},		/* LL_CDC_BRIGHT_CLUS_MID_LIGHT_SLOPE */
{MT9P111_REG8, 0xBCB6, 0x80},		/* LL_CDC_BRIGHT_CLUS_HI_LIGHT_SLOPE */
{MT9P111_REG8, 0xBCB7, 0x39},		/* LL_CDC_BRIGHT_CLUS_LO_LIGHT_SATUR */
{MT9P111_REG8, 0xBCB8, 0x3A},		/* LL_CDC_BRIGHT_CLUS_MID_LIGHT_SATUR */
{MT9P111_REG8, 0xBCB9, 0x24},		/* LL_CDC_BRIGHT_CLUS_HI_LIGHT_SATUR */
{MT9P111_REG16, 0xBCAA, 0x03E8},	/* LL_CDC_THR_ADJ_START_POS */
{MT9P111_REG16, 0xBCAC, 0x012C},	/* LL_CDC_THR_ADJ_MID_POS */
{MT9P111_REG16, 0xBCAE, 0x0009},	/* LL_CDC_THR_ADJ_END_POS */
/* GRB */
{MT9P111_REG8, 0xBC94, 0x0C},		/* LL_GB_START_THRESHOLD_0 */
{MT9P111_REG8, 0xBC95, 0x08},		/* LL_GB_START_THRESHOLD_1 */
{MT9P111_REG8, 0xBC9C, 0x3C},		/* LL_GB_END_THRESHOLD_0 */
{MT9P111_REG8, 0xBC9D, 0x28},		/* LL_GB_END_THRESHOLD_1 */
/* Demosaic REV3 */
{MT9P111_REG16, 0x33B0, 0x2A16},	/* FFNR_ALPHA_BETA */
{MT9P111_REG8, 0xBC8A, 0x02},		/* LL_START_FF_MIX_THRESH_Y */
{MT9P111_REG8, 0xBC8B, 0x0F},		/* LL_END_FF_MIX_THRESH_Y */
{MT9P111_REG8, 0xBC8C, 0xFF},		/* LL_START_FF_MIX_THRESH_YGAIN */
{MT9P111_REG8, 0xBC8D, 0xFF},		/* LL_END_FF_MIX_THRESH_YGAIN */
{MT9P111_REG8, 0xBC8E, 0xFF},		/* LL_START_FF_MIX_THRESH_GAIN */
{MT9P111_REG8, 0xBC8F, 0x00},		/* LL_END_FF_MIX_THRESH_GAIN */
/* Aperture calib */
{MT9P111_REG16, 0x33BA, 0x0084},	/* APEDGE_CONTROL */
{MT9P111_REG16, 0x33BE, 0x0000},	/* UA_KNEE_L */
{MT9P111_REG16, 0x33C2, 0x8800},	/* UA_WEIGHTS */
{MT9P111_REG16, 0xBC5E, 0x0154},	/* LL_START_APERTURE_GAIN_BM */
{MT9P111_REG16, 0xBC60, 0x0640},	/* LL_END_APERTURE_GAIN_BM */
{MT9P111_REG8, 0xBC62, 0x0E},		/* LL_START_APERTURE_KPGAIN */
{MT9P111_REG8, 0xBC63, 0x14},		/* LL_END_APERTURE_KPGAIN */
{MT9P111_REG8, 0xBC64, 0x0E},		/* LL_START_APERTURE_KNGAIN */
{MT9P111_REG8, 0xBC65, 0x14},		/* LL_END_APERTURE_KNGAIN */
{MT9P111_REG8, 0xBCE2, 0x0A},		/* LL_START_POS_KNEE */
{MT9P111_REG8, 0xBCE3, 0x2B},		/* LL_END_POS_KNEE */
{MT9P111_REG8, 0xBCE4, 0x0A},		/* LL_START_NEG_KNEE */
{MT9P111_REG8, 0xBCE5, 0x2B},		/* LL_END_NEG_KNEE */
{MT9P111_REG16, 0x3210, 0x01B0},	/* COLOR_PIPELINE_CONTROL */
/* SFFB REV3 noisemodel */
{MT9P111_REG8, 0xBCC0, 0x1F},		/* LL_SFFB_RAMP_START */
{MT9P111_REG8, 0xBCC1, 0x03},		/* LL_SFFB_RAMP_STOP */
{MT9P111_REG8, 0xBCC2, 0x2C},		/* LL_SFFB_SLOPE_START */
{MT9P111_REG8, 0xBCC3, 0x10},		/* LL_SFFB_SLOPE_STOP */
{MT9P111_REG8, 0xBCC4, 0x07},		/* LL_SFFB_THSTART */
{MT9P111_REG8, 0xBCC5, 0x0B},		/* LL_SFFB_THSTOP */
{MT9P111_REG16, 0xBCBA, 0x0009},	/* LL_SFFB_CONFIG */
/* FTB */
{MT9P111_REG16, 0xBC14, 0xFFFF},	/* LL_GAMMA_FADE_TO_BLACK_START_POS */
{MT9P111_REG16, 0xBC16, 0xFFFF},	/* LL_GAMMA_FADE_TO_BLACK_END_POS */
/* Aperture preference */
{MT9P111_REG16, 0xBC66, 0x0154},	/* LL_START_APERTURE_GM */
{MT9P111_REG16, 0xBC68, 0x07D0},	/* LL_END_APERTURE_GM */
{MT9P111_REG8, 0xBC6A, 0x04},		/* LL_START_APERTURE_INTEGER_GAIN */
{MT9P111_REG8, 0xBC6B, 0x00},		/* LL_END_APERTURE_INTEGER_GAIN */
{MT9P111_REG8, 0xBC6C, 0x00},		/* LL_START_APERTURE_EXP_GAIN */
{MT9P111_REG8, 0xBC6D, 0x00},		/* LL_END_APERTURE_EXP_GAIN */
/* Gain max */
{MT9P111_REG16, 0xA81C, 0x0040},	/* AE_TRACK_MIN_AGAIN */
{MT9P111_REG16, 0xA820, 0x01FC},	/* AE_TRACK_MAX_AGAIN */
{MT9P111_REG16, 0xA822, 0x0080},	/* AE_TRACK_MIN_DGAIN */
{MT9P111_REG16, 0xA824, 0x0100},	/* AE_TRACK_MAX_DGAIN */
/* Saturation REV3 */
{MT9P111_REG8, 0xBC56, 0x64},		/* LL_START_CCM_SATURATION */
{MT9P111_REG8, 0xBC57, 0x1E},		/* LL_END_CCM_SATURATION */
/* DCCM REV3 */
{MT9P111_REG8, 0xBCDE, 0x03},		/* LL_START_SYS_THRESHOLD */
{MT9P111_REG8, 0xBCDF, 0x50},		/* LL_STOP_SYS_THRESHOLD */
{MT9P111_REG8, 0xBCE0, 0x08},		/* LL_START_SYS_GAIN */
{MT9P111_REG8, 0xBCE1, 0x03},		/* LL_STOP_SYS_GAIN */
/* Sobel_REV3 */
{MT9P111_REG16, 0xBCD0, 0x000A},	/* LL_SFFB_SOBEL_FLAT_START */
{MT9P111_REG16, 0xBCD2, 0x00FE},	/* LL_SFFB_SOBEL_FLAT_STOP */
{MT9P111_REG16, 0xBCD4, 0x001E},	/* LL_SFFB_SOBEL_SHARP_START */
{MT9P111_REG16, 0xBCD6, 0x00FF},	/* LL_SFFB_SOBEL_SHARP_STOP */
{MT9P111_REG8, 0xBCC6, 0x00},		/* LL_SFFB_SHARPENING_START */
{MT9P111_REG8, 0xBCC7, 0x00},		/* LL_SFFB_SHARPENING_STOP */
{MT9P111_REG8, 0xBCC8, 0x20},		/* LL_SFFB_FLATNESS_START */
{MT9P111_REG8, 0xBCC9, 0x40},		/* LL_SFFB_FLATNESS_STOP */
{MT9P111_REG8, 0xBCCA, 0x04},		/* LL_SFFB_TRANSITION_START */
{MT9P111_REG8, 0xBCCB, 0x00},		/* LL_SFFB_TRANSITION_STOP */
/* SFFB slope zero enable */
{MT9P111_REG8, 0xBCE6, 0x03},		/* LL_SFFB_ZERO_ENABLE */
/* AE preference */
{MT9P111_REG8, 0xA410, 0x04},		/* AE_RULE_TARGET_AE_6 */
{MT9P111_REG8, 0xA411, 0x06},		/* AE_RULE_TARGET_AE_7 */
/* JPEG Quantization */
{MT9P111_REG8, 0xC8BC, 0x04},		/* CAM_OUTPUT_0_JPEG_QSCALE_0 */
{MT9P111_REG8, 0xC8BD, 0x0A},		/* CAM_OUTPUT_0_JPEG_QSCALE_1 */
{MT9P111_REG8, 0xC8D2, 0x04},		/* CAM_OUTPUT_1_JPEG_QSCALE_0 */
{MT9P111_REG8, 0xC8D3, 0x0A},		/* CAM_OUTPUT_1_JPEG_QSCALE_1 */
/* Sepia effect */
{MT9P111_REG8, 0xDC3A, 0x23},		/* SYS_SEPIA_CR */
{MT9P111_REG8, 0xDC3B, 0xB2},		/* SYS_SEPIA_CB */
{MT9P111_REG16, 0x0018, 0x2008},	/* STANDBY_CONTROL_AND_STATUS */
/* Flash LED Initialization Flash LED AUTO */
{MT9P111_REG16, 0x098E, 0xC054},	/* LOGICAL_ADDRESS_ACCESS */
{MT9P111_REG8, 0xC054, 0x9E},		/* FLASH_HW_UNIT_2_TYPE */
{MT9P111_REG16, 0xC05E, 0xB233},	/* FLASH_HW_UNIT_2_GPIO_PINS */
{MT9P111_REG8, 0x8404, 0x05},		/* SEQ_CMD */
{MT9P111_REG16, 0xC05C, 0x0080},	/* FLASH_HW_UNIT_2_OPTIONS */
{MT9P111_REG16, 0xC060, 0xA980},	/* FLASH_HW_UNIT_2_MAX_TIME_STROBE */
{MT9P111_REG8, 0xC057, 0x04},		/* FLASH_HW_UNIT_2_BRIGHTNESS_TH */
{MT9P111_REG8, 0xC058, 0x02},		/* FLASH_HW_UNIT_2_MODE */
{MT9P111_REG8, 0xC059, 0x03},		/* FLASH_HW_UNIT_2_U_ALGO */
{MT9P111_REG8, 0xC062, 0x0C},		/* FLASH_HW_UNIT_2_MAX_TIME_STROBE_SCALE */
{MT9P111_REG16, 0xC06C, 0x0000},	/* FLASH_HW_UNIT_2_N_PULSES */
{MT9P111_REG16, 0xC06E, 0x2400},	/* FLASH_HW_UNIT_2_F_EXPOSURE */
{MT9P111_REG16, 0xFC0E, 0x0020},	/* FS_OPTIONS */
{MT9P111_REG8, 0xFC24, 0x4B},		/* FS_AWB_R2G_RATIO */
{MT9P111_REG8, 0xFC25, 0x32},		/* FS_AWB_B2G_RATIO */
{MT9P111_REG8, 0xFC26, 0x40},		/* FS_POWER_RATIO */
{MT9P111_REG8, 0xFC11, 0x40},		/* FS_DECR_EXPOSURE */
{MT9P111_REG8, 0x8404, 0x05},		/* SEQ_CMD */
{MT9P111_TABLE_END, 0, 0}
};

static struct mt9p111_reg *mode_table[] = {
	[MT9P111_MODE_PREVIEW] = mode_preview,
	[MT9P111_MODE_CAPTURE] = mode_capture
};

static struct mt9p111_iso iso_table[] = {
	{0, 0},
	{100, 0x0065},
	{200, 0x00CA},
	{400, 0x012F},
	{800, 0x0194},
	{1600, 0x01FC},
	{-1, -1}
};

#endif  /* __MT9P111_REG_H__ */
